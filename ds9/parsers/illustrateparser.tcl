package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval illustrate {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc illustrate::YYABORT {} {
    return -code return 1
}

proc illustrate::YYACCEPT {} {
    return -code return 0
}

proc illustrate::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc illustrate::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc illustrate::yyerror {s} {
    puts stderr $s
}

proc illustrate::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc illustrate::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set illustrate::table {
  30:281 reduce
  29:281 reduce
  21:290 shift
  21:291 shift
  68:281 reduce
  38:281,target 27
  27:0 reduce
  15:278,target 45
  21:295 shift
  48:0 reduce
  0:296,target 19
  38:281 reduce
  70:0 reduce
  69:0 reduce
  27:281,target 1
  18:290,target 57
  73:281,target 53
  77:281 shift
  2:0 reduce
  72:0,target 52
  64:0,target 59
  16:281,target 64
  62:281,target 56
  56:0,target 55
  47:281 reduce
  48:0,target 69
  41:0,target 15
  15:276,target 43
  18:318,target 58
  21:319 goto
  45:0 reduce
  33:0,target 7
  25:0,target 0
  0:294,target 18
  17:281 shift
  66:0 reduce
  51:281,target 66
  10:0,target 25
  56:281 reduce
  14:322,target 49
  6:279 shift
  40:281,target 12
  39:281,target 43
  26:281 reduce
  65:281 reduce
  42:0 reduce
  7:310,target 34
  15:274,target 41
  28:281,target 2
  0:292,target 16
  74:281,target 26
  63:0 reduce
  35:281 reduce
  74:281 reduce
  17:281,target 55
  63:281,target 60
  22:306,target 72
  44:281 reduce
  38:0 reduce
  52:281,target 67
  60:0 reduce
  59:0 reduce
  0:300,target 23
  0:289,target 15
  3:0,target 47
  76:0,target 29
  14:281 reduce
  68:0,target 48
  26:315 goto
  23:273 shift
  14:282 shift
  18:283,target 56
  61:0,target 37
  23:274 shift
  53:281 reduce
  53:0,target 65
  41:281,target 15
  23:275 shift
  45:0,target 17
  23:276 shift
  37:0,target 33
  23:277 shift
  14:0 reduce
  30:0,target 31
  29:0,target 3
  23:278 shift
  22:304,target 70
  3:281 reduce
  5:267,target 28
  8:309,target 37
  35:0 reduce
  23:277,target 44
  23:281 reduce
  14:0,target 68
  30:281,target 31
  29:281,target 3
  21:290,target 64
  75:281,target 42
  62:281 reduce
  56:0 reduce
  0:287,target 13
  0:257 shift
  0:258 shift
  64:281,target 59
  32:281 reduce
  0:260 shift
  0:259 shift
  14:298 shift
  0:261 shift
  9:0 reduce
  0:262 shift
  71:281 reduce
  24:279,target 76
  0:263 shift
  22:302,target 68
  32:0 reduce
  0:265 shift
  0:316,target 26
  53:281,target 65
  23:275,target 42
  9:281,target 40
  53:0 reduce
  41:281 reduce
  0:285,target 11
  74:0 reduce
  23:312 goto
  42:281,target 13
  14:322 goto
  7:272,target 33
  11:281 shift
  50:281 reduce
  49:281 reduce
  8:269 shift
  8:270 shift
  31:281,target 32
  28:0 reduce
  76:281,target 29
  0:314,target 25
  0:0,target 23
  0:281 shift
  26:315,target 77
  23:273,target 40
  14:282,target 47
  73:0,target 53
  50:0 reduce
  49:0 reduce
  19:281 reduce
  20:281 reduce
  65:0,target 58
  0:284 shift
  20:282 shift
  57:0,target 54
  0:285 shift
  13:277,target 44
  71:0 reduce
  58:281 reduce
  50:0,target 28
  49:0,target 39
  0:286 shift
  19:281,target 24
  20:281,target 61
  65:281,target 58
  42:0,target 13
  0:287 shift
  34:0,target 34
  0:288 shift
  26:0,target 20
  0:300 shift
  0:289 shift
  3:0 reduce
  0:301 shift
  28:281 reduce
  0:292 shift
  0:262,target 6
  0:293 shift
  54:281,target 38
  25:0 accept
  0:294 shift
  67:281 reduce
  0:296 shift
  46:0 reduce
  0:297 shift
  21:283,target 63
  0:298 shift
  0:299 shift
  67:0 reduce
  43:281,target 16
  37:281 reduce
  13:275,target 42
  20:298 shift
  0:281,target 9
  76:281 reduce
  0:314 goto
  0:0 reduce
  0:316 goto
  32:281,target 6
  0:260,target 4
  0:259,target 3
  5:266 shift
  14:298,target 48
  77:281,target 78
  5:267 shift
  8:309 goto
  46:281 reduce
  5:268 shift
  43:0 reduce
  0:299,target 22
  20:320 goto
  66:281,target 57
  64:0 reduce
  16:281 reduce
  5:308,target 30
  13:273,target 40
  16:282 shift
  8:269,target 35
  8:270,target 36
  55:281 reduce
  16:284 shift
  4:0,target 44
  10:281,target 25
  55:281,target 41
  16:284,target 52
  0:257,target 1
  70:0,target 50
  69:0,target 49
  62:0,target 56
  54:0,target 38
  40:0 reduce
  39:0 reduce
  64:281 reduce
  46:0,target 30
  0:297,target 20
  44:281,target 14
  38:0,target 27
  61:0 reduce
  31:0,target 32
  1:281,target 45
  23:0,target 11
  15:0,target 11
  34:281 reduce
  16:298 shift
  6:279,target 31
  33:281,target 7
  73:281 reduce
  15:0 reduce
  16:282,target 51
  5:308 goto
  13:273 shift
  36:0 reduce
  13:274 shift
  15:277,target 44
  43:281 reduce
  13:275 shift
  67:281,target 36
  13:276 shift
  57:0 reduce
  13:277 shift
  13:278 shift
  16:321 goto
  78:0 reduce
  13:281 reduce
  11:281,target 38
  56:281,target 55
  52:281 reduce
  2:281 reduce
  33:0 reduce
  21:295,target 66
  45:281,target 17
  15:275,target 42
  2:281,target 46
  54:0 reduce
  0:293,target 17
  61:281 reduce
  75:0 reduce
  1:0,target 45
  34:281,target 34
  16:298,target 53
  74:0,target 26
  23:312,target 75
  66:0,target 57
  31:281 reduce
  58:0,target 35
  51:0,target 66
  22:307,target 73
  22:302 shift
  70:281 reduce
  69:281 reduce
  43:0,target 16
  22:303 shift
  13:312 goto
  20:320,target 61
  35:0,target 4
  30:0 reduce
  29:0 reduce
  23:281,target 11
  22:304 shift
  68:281,target 48
  27:0,target 1
  22:305 shift
  22:306 shift
  15:273,target 40
  19:0,target 24
  20:0,target 61
  51:0 reduce
  22:307 shift
  40:281 reduce
  39:281 reduce
  0:301,target 24
  72:0 reduce
  12:281,target 39
  57:281,target 54
  4:0 reduce
  10:281 reduce
  48:281 reduce
  22:305,target 71
  22:317 goto
  46:281,target 30
  26:0 reduce
  5:268,target 29
  23:278,target 45
  3:281,target 47
  7:271 shift
  21:291,target 65
  7:272 shift
  47:0 reduce
  0:288,target 14
  68:0 reduce
  35:281,target 4
  18:283 shift
  57:281 reduce
  1:0 reduce
  21:319,target 67
  27:281 reduce
  18:290 shift
  70:281,target 50
  69:281,target 49
  23:0 reduce
  22:303,target 69
  13:312,target 46
  5:266,target 27
  66:281 reduce
  23:276,target 43
  44:0 reduce
  78:0,target 22
  13:281,target 11
  71:0,target 51
  65:0 reduce
  58:281,target 35
  0:286,target 12
  63:0,target 60
  36:281 reduce
  55:0,target 41
  47:0,target 70
  75:281 reduce
  40:0,target 12
  39:0,target 43
  32:0,target 6
  0:265,target 8
  47:281,target 70
  4:281,target 44
  15:273 shift
  16:0,target 64
  19:0 reduce
  20:0 reduce
  7:310 goto
  15:274 shift
  45:281 reduce
  15:275 shift
  41:0 reduce
  23:274,target 41
  15:276 shift
  18:318 goto
  15:277 shift
  36:281,target 5
  15:278 shift
  62:0 reduce
  13:278,target 45
  16:321,target 54
  0:284,target 10
  15:281 reduce
  20:282,target 59
  54:281 reduce
  7:271,target 32
  71:281,target 51
  0:263,target 7
  4:281 reduce
  16:0 reduce
  24:279 shift
  37:0 reduce
  14:281,target 68
  63:281 reduce
  60:281,target 62
  59:281,target 63
  58:0 reduce
  13:276,target 43
  33:281 reduce
  48:281,target 69
  22:317,target 74
  72:281 reduce
  0:261,target 5
  9:0,target 40
  13:0 reduce
  15:312 goto
  2:0,target 46
  75:0,target 42
  34:0 reduce
  67:0,target 36
  37:281,target 33
  20:298,target 60
  60:0,target 62
  59:0,target 63
  42:281 reduce
  55:0 reduce
  52:0,target 67
  21:282,target 62
  44:0,target 14
  36:0,target 5
  13:274,target 41
  76:0 reduce
  28:0,target 2
  26:281,target 21
  12:281 shift
  72:281,target 52
  13:0,target 11
  15:312,target 50
  51:281 reduce
  10:0 reduce
  0:258,target 2
  31:0 reduce
  1:281 reduce
  15:281,target 11
  61:281,target 37
  0:298,target 21
  52:0 reduce
  21:282 shift
  21:283 shift
  60:281 reduce
  59:281 reduce
  73:0 reduce
  50:281,target 28
  49:281,target 39
  9:281 reduce
}

array set illustrate::rules {
  9,l 311
  11,l 312
  32,l 316
  53,l 317
  6,l 310
  28,l 316
  50,l 317
  49,l 317
  3,l 308
  25,l 316
  46,l 316
  67,l 321
  0,l 323
  22,l 314
  43,l 316
  64,l 321
  18,l 313
  40,l 316
  39,l 316
  61,l 320
  15,l 312
  36,l 316
  57,l 319
  12,l 312
  33,l 316
  54,l 318
  7,l 310
  29,l 316
  30,l 316
  51,l 317
  4,l 309
  26,l 316
  47,l 316
  68,l 322
  1,l 308
  23,l 316
  44,l 316
  65,l 321
  19,l 313
  20,l 314
  41,l 316
  62,l 320
  16,l 312
  37,l 316
  58,l 319
  13,l 312
  34,l 316
  55,l 318
  8,l 311
  10,l 311
  31,l 316
  52,l 317
  5,l 309
  27,l 316
  48,l 317
  70,l 322
  69,l 322
  2,l 308
  24,l 316
  45,l 316
  66,l 321
  21,l 315
  42,l 316
  63,l 320
  17,l 312
  38,l 316
  60,l 319
  59,l 319
  14,l 312
  35,l 316
  56,l 319
}

array set illustrate::rules {
  63,dc 1
  12,dc 1
  26,dc 2
  3,dc 1
  41,dc 2
  55,dc 1
  70,dc 1
  69,dc 1
  18,dc 1
  33,dc 2
  9,dc 1
  47,dc 1
  62,dc 1
  11,dc 0
  25,dc 1
  2,dc 1
  40,dc 1
  39,dc 2
  54,dc 1
  68,dc 0
  17,dc 1
  32,dc 2
  8,dc 1
  46,dc 1
  61,dc 0
  10,dc 1
  24,dc 1
  1,dc 1
  38,dc 2
  53,dc 1
  67,dc 1
  16,dc 1
  31,dc 2
  7,dc 1
  45,dc 1
  60,dc 1
  59,dc 1
  23,dc 0
  0,dc 1
  37,dc 2
  52,dc 1
  66,dc 1
  15,dc 1
  29,dc 2
  30,dc 2
  6,dc 1
  44,dc 1
  58,dc 1
  22,dc 3
  36,dc 2
  51,dc 1
  65,dc 1
  14,dc 1
  28,dc 2
  5,dc 1
  43,dc 2
  57,dc 1
  21,dc 0
  35,dc 2
  50,dc 1
  49,dc 1
  64,dc 0
  13,dc 1
  27,dc 2
  4,dc 1
  42,dc 2
  56,dc 1
  19,dc 1
  20,dc 1
  34,dc 2
  48,dc 1
}

array set illustrate::rules {
  41,line 157
  7,line 110
  37,line 153
  4,line 105
  34,line 150
  1,line 100
  31,line 143
  27,line 139
  24,line 135
  21,line 130
  17,line 124
  14,line 121
  70,line 199
  69,line 198
  11,line 118
  66,line 193
  63,line 188
  60,line 183
  59,line 182
  56,line 179
  53,line 172
  50,line 169
  49,line 168
  46,line 163
  43,line 160
  9,line 114
  40,line 156
  39,line 155
  6,line 109
  36,line 152
  3,line 102
  33,line 147
  29,line 141
  30,line 142
  26,line 138
  23,line 134
  19,line 127
  20,line 130
  16,line 123
  13,line 120
  68,line 197
  10,line 115
  65,line 192
  62,line 187
  58,line 181
  55,line 176
  52,line 171
  48,line 167
  45,line 162
  42,line 158
  8,line 113
  38,line 154
  5,line 106
  35,line 151
  2,line 101
  32,line 145
  28,line 140
  25,line 137
  22,line 131
  18,line 126
  15,line 122
  21,e 1
  12,line 119
  67,line 194
  64,line 191
  61,line 186
  57,line 180
  54,line 175
  51,line 170
  47,line 164
  44,line 161
}

array set illustrate::lr1_table {
  66,trans {}
  35 {{4 {0 281} 1}}
  14,trans {{282 47} {298 48} {322 49}}
  36 {{5 {0 281} 1}}
  33,trans {}
  37 {{33 {0 281} 2}}
  52,trans {}
  38 {{27 {0 281} 2}}
  71,trans {}
  40 {{12 {0 281} 1}}
  39 {{43 {0 281} 2}}
  18,trans {{283 56} {290 57} {318 58}}
  41 {{15 {0 281} 1}}
  1,trans {}
  37,trans {}
  42 {{13 {0 281} 1}}
  56,trans {}
  43 {{16 {0 281} 1}}
  75,trans {}
  44 {{14 {0 281} 1}}
  23,trans {{273 40} {274 41} {275 42} {276 43} {277 44} {278 45} {312 75}}
  45 {{17 {0 281} 1}}
  5,trans {{266 27} {267 28} {268 29} {308 30}}
  42,trans {}
  46 {{30 {0 281} 2}}
  61,trans {}
  47 {{70 {0 281} 1}}
  48 {{69 {0 281} 1}}
  27,trans {}
  50 {{28 {0 281} 2}}
  49 {{39 {0 281} 2}}
  9,trans {}
  46,trans {}
  51 {{66 {0 281} 1}}
  65,trans {}
  52 {{67 {0 281} 1}}
  53 {{65 {0 281} 1}}
  13,trans {{273 40} {274 41} {275 42} {276 43} {277 44} {278 45} {312 46}}
  32,trans {}
  54 {{38 {0 281} 2}}
  51,trans {}
  55 {{41 {0 281} 2}}
  70,trans {}
  69,trans {}
  56 {{55 {0 281} 1}}
  57 {{54 {0 281} 1}}
  17,trans {{281 55}}
  0,trans {{257 1} {258 2} {259 3} {260 4} {261 5} {262 6} {263 7} {265 8} {281 9} {284 10} {285 11} {286 12} {287 13} {288 14} {289 15} {292 16} {293 17} {294 18} {296 19} {297 20} {298 21} {299 22} {300 23} {301 24} {314 25} {316 26}}
  36,trans {}
  58 {{35 {0 281} 2}}
  55,trans {}
  60 {{62 {0 281} 1}}
  59 {{63 {0 281} 1}}
  74,trans {}
  61 {{37 {0 281} 2}}
  22,trans {{302 68} {303 69} {304 70} {305 71} {306 72} {307 73} {317 74}}
  62 {{56 {0 281} 1}}
  4,trans {}
  41,trans {}
  63 {{60 {0 281} 1}}
  60,trans {}
  59,trans {}
  64 {{59 {0 281} 1}}
  78,trans {}
  65 {{58 {0 281} 1}}
  26,trans {{315 77}}
  66 {{57 {0 281} 1}}
  8,trans {{269 35} {270 36} {309 37}}
  45,trans {}
  67 {{36 {0 281} 2}}
  64,trans {}
  68 {{48 {0 281} 1}}
  70 {{50 {0 281} 1}}
  69 {{49 {0 281} 1}}
  12,trans {{281 39}}
  31,trans {}
  71 {{51 {0 281} 1}}
  50,trans {}
  49,trans {}
  72 {{52 {0 281} 1}}
  68,trans {}
  73 {{53 {0 281} 1}}
  74 {{26 {0 281} 2}}
  16,trans {{282 51} {284 52} {298 53} {321 54}}
  35,trans {}
  75 {{42 {0 281} 2}}
  54,trans {}
  76 {{29 {0 281} 2}}
  73,trans {}
  77 {{22 0 2}}
  78 {{22 0 3}}
  21,trans {{282 62} {283 63} {290 64} {291 65} {295 66} {319 67}}
  3,trans {}
  40,trans {}
  39,trans {}
  58,trans {}
  10 {{25 {0 281} 1}}
  77,trans {{281 78}}
  11 {{27 {0 281} 1}}
  25,trans {}
  12 {{43 {0 281} 1}}
  7,trans {{271 32} {272 33} {310 34}}
  44,trans {}
  13 {{30 {0 281} 1} {11 {0 281} 0} {12 {0 281} 0} {13 {0 281} 0} {14 {0 281} 0} {15 {0 281} 0} {16 {0 281} 0} {17 {0 281} 0}}
  63,trans {}
  14 {{39 {0 281} 1} {68 {0 281} 0} {69 {0 281} 0} {70 {0 281} 0}}
  11,trans {{281 38}}
  15 {{28 {0 281} 1} {11 {0 281} 0} {12 {0 281} 0} {13 {0 281} 0} {14 {0 281} 0} {15 {0 281} 0} {16 {0 281} 0} {17 {0 281} 0}}
  30,trans {}
  29,trans {}
  16 {{38 {0 281} 1} {64 {0 281} 0} {65 {0 281} 0} {66 {0 281} 0} {67 {0 281} 0}}
  48,trans {}
  0 {{0 0 0} {20 0 0} {22 0 0} {23 {0 281} 0} {24 {0 281} 0} {25 {0 281} 0} {26 {0 281} 0} {27 {0 281} 0} {28 {0 281} 0} {29 {0 281} 0} {30 {0 281} 0} {31 {0 281} 0} {32 {0 281} 0} {33 {0 281} 0} {34 {0 281} 0} {35 {0 281} 0} {36 {0 281} 0} {37 {0 281} 0} {38 {0 281} 0} {39 {0 281} 0} {40 {0 281} 0} {41 {0 281} 0} {42 {0 281} 0} {43 {0 281} 0} {44 {0 281} 0} {45 {0 281} 0} {46 {0 281} 0} {47 {0 281} 0}}
  17 {{41 {0 281} 1}}
  67,trans {}
  1 {{45 {0 281} 1}}
  18 {{35 {0 281} 1} {54 {0 281} 0} {55 {0 281} 0}}
  15,trans {{273 40} {274 41} {275 42} {276 43} {277 44} {278 45} {312 50}}
  2 {{46 {0 281} 1}}
  19 {{24 {0 281} 1}}
  20 {{37 {0 281} 1} {61 {0 281} 0} {62 {0 281} 0} {63 {0 281} 0}}
  34,trans {}
  3 {{47 {0 281} 1}}
  21 {{36 {0 281} 1} {56 {0 281} 0} {57 {0 281} 0} {58 {0 281} 0} {59 {0 281} 0} {60 {0 281} 0}}
  53,trans {}
  4 {{44 {0 281} 1}}
  22 {{26 {0 281} 1} {48 {0 281} 0} {49 {0 281} 0} {50 {0 281} 0} {51 {0 281} 0} {52 {0 281} 0} {53 {0 281} 0}}
  72,trans {}
  5 {{31 {0 281} 1} {1 {0 281} 0} {2 {0 281} 0} {3 {0 281} 0}}
  23 {{42 {0 281} 1} {11 {0 281} 0} {12 {0 281} 0} {13 {0 281} 0} {14 {0 281} 0} {15 {0 281} 0} {16 {0 281} 0} {17 {0 281} 0}}
  20,trans {{282 59} {298 60} {320 61}}
  19,trans {}
  6 {{32 {0 281} 1}}
  24 {{29 {0 281} 1}}
  2,trans {}
  38,trans {}
  7 {{34 {0 281} 1} {6 {0 281} 0} {7 {0 281} 0}}
  25 {{0 0 1}}
  57,trans {}
  8 {{33 {0 281} 1} {4 {0 281} 0} {5 {0 281} 0}}
  26 {{20 0 1} {22 0 1} {21 281 0}}
  76,trans {}
  9 {{40 {0 281} 1}}
  27 {{1 {0 281} 1}}
  24,trans {{279 76}}
  28 {{2 {0 281} 1}}
  6,trans {{279 31}}
  43,trans {}
  29 {{3 {0 281} 1}}
  30 {{31 {0 281} 2}}
  62,trans {}
  31 {{32 {0 281} 2}}
  10,trans {}
  32 {{6 {0 281} 1}}
  28,trans {}
  33 {{7 {0 281} 1}}
  47,trans {}
  34 {{34 {0 281} 2}}
}

array set illustrate::token_id_table {
  286 COMMAND_
  286,t 0
  287 DASH_
  292,line 49
  302,line 61
  288 DELETE_
  317,t 1
  265,title FONTWEIGHT
  289 FILL_
  290 FRONT_
  300 SHOW_
  284,title CLOSE
  291 INVERT_
  301 WIDTH_
  313,title {}
  292 LIST_
  302 CIRCLE_
  288,line 45
  293 LOAD_
  303 ELLIPSE_
  294 MOVE_
  304 BOX_
  305 POLYGON_
  295 NONE_
  306 LINE_
  296 OPEN_
  307 TEXT_
  262,t 0
  297 SAVE_
  308 font
  285,line 42
  298 SELECT_
  310 fontSlant
  309 fontWeight
  299 SHAPE_
  311 fontStyle
  283,t 0
  312 yesno
  313 numeric
  314,t 1
  314 command
  282,line 39
  315 @PSEUDO1
  316 illustrate
  264,title FONTSTYLE
  317 shape
  283,title BACK
  318 move
  312,title {}
  320 save
  319 select
  278,line 30
  321 list
  error,line 98
  322 delete
  258,t 0
  323 start'
  275,line 27
  279,t 0
  280,t 0
  311,t 1
  272,line 23
  263,title FONTSLANT
  282,title ALL
  311,title {}
  268,line 19
  276,t 0
  265,line 16
  307,t 0
  297,t 0
  262,line 13
  0,t 0
  0 {$}
  262,title FONTSIZE
  281,title string
  310,title {}
  309,title {}
  error,t 0
  299,title SHAPE
  258,line 8
  273,t 0
  294,t 0
  304,t 0
  321,line 190
  317,line 166
  261,title FONT
  279,title integer
  280,title float
  308,title {}
  269,t 0
  270,t 0
  298,title SELECT
  314,line 129
  291,t 0
  301,t 0
  322,t 1
  311,line 112
  307,line 66
  266,t 0
  260,title UNDO
  259,title PASTE
  297,line 55
  278,title FALSE
  307,title TEXT
  297,title SAVE
  287,t 0
  294,line 51
  304,line 63
  318,t 1
  error,title {}
  291,line 48
  301,line 59
  263,t 0
  258,title COPY
  287,line 44
  277,title TRUE
  284,t 0
  306,title LINE
  296,title OPEN
  315,t 1
  284,line 41
  281,line 35
  260,t 0
  259,t 0
  281,t 0
  257,title CUT
  277,line 29
  276,title OFF
  312,t 1
  305,title POLYGON
  295,title NONE
  274,line 26
  271,line 22
  277,t 0
  308,t 1
  267,line 18
  298,t 0
  275,title ON
  294,title MOVE
  304,title BOX
  323,title {}
  264,line 15
  261,line 12
  274,t 0
  305,t 0
  295,t 0
  257,line 7
  274,title NO
  323,line 200
  293,title LOAD
  303,title ELLIPSE
  322,title {}
  320,line 185
  319,line 178
  error error
  271,t 0
  292,t 0
  302,t 0
  316,line 133
  323,t 1
  273,title YES
  313,line 125
  292,title LIST
  302,title CIRCLE
  321,title {}
  267,t 0
  310,line 108
  309,line 104
  299,line 57
  288,t 0
  320,t 1
  319,t 1
  306,line 65
  296,line 53
  272,title ITALIC
  291,title INVERT
  293,line 50
  301,title WIDTH
  303,line 62
  320,title {}
  319,title {}
  264,t 0
  285,t 0
  289,line 46
  290,line 47
  300,line 58
  316,t 1
  286,line 43
  271,title ROMAN
  261,t 0
  283,line 40
  289,title FILL
  290,title FRONT
  300,title SHOW
  318,title {}
  282,t 0
  279,line 32
  280,line 33
  313,t 1
  276,line 28
  257,t 0
  269,title NORMAL
  270,title BOLD
  273,line 25
  288,title DELETE
  317,title {}
  278,t 0
  310,t 1
  309,t 1
  299,t 0
  269,line 20
  270,line 21
  266,line 17
  268,title COURIER
  275,t 0
  263,line 14
  287,title DASH
  316,title {}
  306,t 0
  296,t 0
  260,line 10
  259,line 54
  322,line 196
  272,t 0
  267,title HELVETICA
  257 CUT_
  286,title COMMAND
  293,t 0
  303,t 0
  315,title {}
  258 COPY_
  318,line 174
  260 UNDO_
  259 PASTE_
  261 FONT_
  262 FONTSIZE_
  263 FONTSLANT_
  264 FONTSTYLE_
  315,line 130
  265 FONTWEIGHT_
  266 TIMES_
  267 HELVETICA_
  268,t 0
  268 COURIER_
  269 NORMAL_
  270 BOLD_
  312,line 117
  271 ROMAN_
  272 ITALIC_
  289,t 0
  290,t 0
  300,t 0
  266,title TIMES
  273 YES_
  274 NO_
  285,title COLOR
  321,t 1
  314,title {}
  275 ON_
  308,line 99
  276 OFF_
  298,line 56
  277 TRUE_
  278 FALSE_
  279 INT_
  280 REAL_
  281 STRING_
  305,line 64
  282 ALL_
  295,line 52
  265,t 0
  283 BACK_
  284 CLOSE_
  285 COLOR_
}

proc illustrate::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { set _ times }
                    2 { set _ helvetica }
                    3 { set _ courier }
                    4 { set _ normal }
                    5 { set _ bold }
                    6 { set _ roman }
                    7 { set _ italic }
                    8 { set _ normal }
                    9 { set _ bold }
                    10 { set _ italic }
                    11 { set _ 1 }
                    12 { set _ 1 }
                    13 { set _ 1 }
                    14 { set _ 1 }
                    15 { set _ 0 }
                    16 { set _ 0 }
                    17 { set _ 0 }
                    18 { set _ $1 }
                    19 { set _ $1 }
                    21 { global ds9; if {!$ds9(init)} {YYERROR} else {yyclearin; YYACCEPT} }
                    23 { IllustrateCmdLoad }
                    24 { IllustrateCmdOpen }
                    25 { IllustrateCmdClose }
                    26 { ProcessCmdSet illustrate shape $2 {} }
                    27 { ProcessCmdSet illustrate color $2 IllustrateUpdateGraphic }
                    28 { ProcessCmdSet illustrate fill $2 IllustrateUpdateGraphic }
                    29 { ProcessCmdSet illustrate width $2 IllustrateUpdateGraphic }
                    30 { ProcessCmdSet illustrate dash $2 IllustrateUpdateGraphic }
                    31 { ProcessCmdSet illustrate font $2 IllustrateUpdateGraphic }
                    32 { ProcessCmdSet illustrate font,size $2 IllustrateUpdateGraphic }
                    33 { ProcessCmdSet illustrate font,weight $2 IllustrateUpdateGraphic }
                    34 { ProcessCmdSet illustrate font,slant $2 IllustrateUpdateGraphic }
                    40 { IllustrateLoadFn $1 }
                    41 { IllustrateLoadFn $2 }
                    42 { ProcessCmdSet illustrate show $2 IllustrateShow }
                    43 { IllustrateCmdCommand $2 }
                    44 { IllustrateUndo }
                    45 { IllustrateCut }
                    46 { IllustrateCopy }
                    47 { IllustratePaste }
                    48 { set _ circle }
                    49 { set _ ellipse }
                    50 { set _ box }
                    51 { set _ polygon }
                    52 { set _ line }
                    53 { set _ text }
                    54 { IllustrateMoveFront }
                    55 { IllustrateMoveBack }
                    56 { IllustrateSelectAll }
                    57 { IllustrateSelectNone }
                    58 { IllustrateInvertSelect }
                    59 { IllustrateSelectFront }
                    60 { IllustrateSelectBack }
                    61 { IllustrateSaveAll }
                    62 { IllustrateSaveSelect }
                    63 { IllustrateSaveAll }
                    64 { IllustrateListAll }
                    65 { IllustrateListSelect }
                    66 { IllustrateListAll }
                    67 { SimpleTextDestroy illustratetxt }
                    68 { IllustrateDeleteAll }
                    69 { IllustrateDeleteSelect }
                    70 { IllustrateDeleteAll }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc illustrate::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
