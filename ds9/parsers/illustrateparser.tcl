package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval illustrate {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc illustrate::YYABORT {} {
    return -code return 1
}

proc illustrate::YYACCEPT {} {
    return -code return 0
}

proc illustrate::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc illustrate::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc illustrate::yyerror {s} {
    puts stderr $s
}

proc illustrate::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc illustrate::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set illustrate::table {
  11:263,target 27
  27:0 reduce
  24:269,target 29
  48:0 reduce
  47:269 reduce
  12:286,target 38
  18:290,target 54
  13:269,target 40
  58:269,target 38
  0:275,target 9
  6:0,target 15
  17:270 shift
  2:0 reduce
  17:271 shift
  9:297 goto
  56:269 reduce
  56:0,target 36
  24:0 reduce
  11:261,target 25
  14:303,target 43
  48:0,target 43
  47:269,target 23
  6:269 reduce
  41:0,target 42
  4:269,target 30
  33:0,target 57
  26:269 reduce
  17:278 shift
  25:0,target 2
  17:279 shift
  66:0 reduce
  65:269 reduce
  10:0,target 55
  36:269,target 53
  17:283 shift
  0:273,target 7
  17:283,target 52
  35:269 reduce
  25:269,target 2
  21:0 accept
  42:0 reduce
  17:304 goto
  63:0 reduce
  44:269 reduce
  60:269,target 40
  59:269,target 39
  9:266,target 30
  14:271 shift
  48:269,target 43
  53:269 reduce
  5:269,target 26
  38:0 reduce
  3:269 reduce
  60:0 reduce
  59:0 reduce
  37:269,target 54
  23:269 reduce
  0:289,target 20
  3:0,target 33
  14:278 shift
  9:264,target 28
  62:269 reduce
  61:0,target 16
  16:305,target 47
  53:0,target 22
  19:266,target 30
  26:269,target 5
  17:278,target 50
  37:0,target 54
  32:269 reduce
  30:0,target 7
  29:0,target 4
  22:0,target 10
  35:0 reduce
  15:269,target 14
  61:269,target 16
  56:0 reduce
  11:261 shift
  14:303 goto
  0:287,target 18
  11:262 shift
  11:263 shift
  41:269 reduce
  0:257 shift
  9:262,target 26
  11:264 shift
  0:258 shift
  11:265 shift
  0:259 shift
  0:260 shift
  11:266 shift
  50:269,target 46
  49:269,target 47
  19:264,target 28
  9:0 reduce
  6:269,target 15
  11:0 reduce
  11:269 reduce
  19:261 shift
  19:262 shift
  32:0 reduce
  19:263 shift
  50:269 reduce
  49:269 reduce
  19:264 shift
  38:269,target 52
  12:306,target 39
  19:265 shift
  53:0 reduce
  19:266 shift
  20:267 shift
  0:269 shift
  0:285,target 16
  0:272 shift
  19:269 reduce
  0:273 shift
  27:269,target 3
  0:274 shift
  58:269 reduce
  0:275 shift
  6:0 reduce
  19:262,target 26
  0:276 shift
  0:277 shift
  8:269 shift
  28:0 reduce
  22:300,target 64
  0:280 shift
  28:269 reduce
  0:281 shift
  0:0,target 13
  16:269,target 44
  16:270,target 45
  62:269,target 28
  0:282 shift
  50:0 reduce
  49:0 reduce
  65:0,target 50
  0:284 shift
  57:0,target 37
  0:285 shift
  50:0,target 46
  49:0,target 47
  0:286 shift
  42:0,target 41
  0:287 shift
  51:269,target 45
  34:0,target 25
  0:288 shift
  37:269 reduce
  26:0,target 5
  0:289 shift
  3:0 reduce
  7:269,target 23
  0:301 goto
  11:297 goto
  11:0,target 1
  9:297,target 31
  25:0 reduce
  40:269,target 27
  39:269,target 24
  46:269 shift
  0:299 goto
  18:295,target 59
  19:297 goto
  67:0 reduce
  28:269,target 6
  0:281,target 13
  0:0 reduce
  16:269 shift
  16:270 shift
  16:286,target 46
  55:269 reduce
  0:259,target 3
  0:260,target 4
  11:266,target 30
  22:0 reduce
  17:270,target 48
  63:269,target 19
  5:269 reduce
  43:0 reduce
  0:299,target 21
  19:297,target 62
  25:269 reduce
  18:293,target 57
  64:269 shift
  52:269,target 44
  8:269,target 24
  4:0,target 30
  16:286 shift
  34:269 reduce
  41:269,target 42
  0:257,target 1
  11:264,target 28
  62:0,target 28
  54:0,target 34
  40:0 reduce
  39:0 reduce
  38:0,target 52
  61:0 reduce
  31:0,target 20
  30:269,target 7
  29:269,target 4
  16:305 goto
  43:269 reduce
  23:0,target 17
  18:291,target 55
  15:0,target 14
  0:276,target 10
  13:269 shift
  64:269,target 67
  15:0 reduce
  11:262,target 26
  52:269 reduce
  36:0 reduce
  2:269 reduce
  57:0 reduce
  53:269,target 22
  22:269 reduce
  9:269,target 1
  10:307,target 34
  61:269 reduce
  0:274,target 8
  42:269,target 41
  12:0 reduce
  31:269 reduce
  33:0 reduce
  31:269,target 20
  54:0 reduce
  14:271,target 41
  1:0,target 31
  40:269 reduce
  39:269 reduce
  0:272,target 6
  19:269,target 1
  66:0,target 49
  65:269,target 50
  22:300 goto
  58:0,target 38
  51:0,target 45
  43:0,target 21
  10:269 reduce
  10:270 shift
  35:0,target 18
  30:0 reduce
  29:0 reduce
  27:0,target 3
  54:269,target 34
  48:269 reduce
  19:0,target 1
  51:0 reduce
  12:0,target 51
  0:301,target 22
  11:297,target 35
  9:265,target 29
  43:269,target 21
  20:267,target 63
  0:269,target 5
  4:0 reduce
  57:269 reduce
  17:279,target 51
  26:0 reduce
  7:269 shift
  32:269,target 56
  10:286 shift
  27:269 reduce
  47:0 reduce
  66:269 reduce
  0:288,target 19
  9:263,target 27
  66:269,target 49
  1:0 reduce
  36:269 reduce
  19:265,target 29
  10:307 goto
  18:290 shift
  23:0 reduce
  10:269,target 55
  10:270,target 32
  18:291 shift
  55:269,target 35
  18:302 goto
  18:292 shift
  18:293 shift
  44:0 reduce
  5:0,target 26
  18:294 shift
  18:295 shift
  45:269 shift
  18:296 shift
  65:0 reduce
  0:286,target 17
  63:0,target 19
  44:269,target 48
  55:0,target 35
  1:269,target 31
  9:261,target 25
  47:0,target 23
  40:0,target 27
  39:0,target 24
  15:269 reduce
  32:0,target 56
  19:263,target 27
  24:0,target 29
  54:269 reduce
  33:269,target 57
  19:0 reduce
  41:0 reduce
  4:269 reduce
  24:269 reduce
  62:0 reduce
  22:269,target 11
  0:284,target 15
  63:269 reduce
  17:304,target 53
  10:286,target 33
  11:269,target 1
  19:261,target 25
  56:269,target 36
  33:269 reduce
  37:0 reduce
  58:0 reduce
  45:269,target 65
  18:296,target 60
  2:269,target 32
  42:269 reduce
  0:282,target 14
  12:272,target 37
  34:269,target 25
  9:0,target 1
  12:269 reduce
  12:270 shift
  2:0,target 32
  17:271,target 49
  12:272 shift
  51:269 reduce
  34:0 reduce
  67:0,target 12
  60:0,target 40
  59:0,target 39
  23:269,target 17
  14:278,target 42
  55:0 reduce
  52:0,target 44
  1:269 reduce
  9:261 shift
  44:0,target 48
  9:262 shift
  18:294,target 58
  36:0,target 53
  9:263 shift
  28:0,target 6
  0:280,target 12
  9:264 shift
  21:0,target 0
  9:265 shift
  60:269 reduce
  59:269 reduce
  9:266 shift
  12:269,target 51
  12:270,target 36
  57:269,target 37
  10:0 reduce
  0:258,target 2
  9:269 reduce
  11:265,target 29
  12:286 shift
  31:0 reduce
  30:269 reduce
  29:269 reduce
  46:269,target 66
  52:0 reduce
  3:269,target 33
  18:302,target 61
  18:292,target 56
  0:277,target 11
  38:269 reduce
  35:269,target 18
  12:306 goto
  5:0 reduce
}

array set illustrate::rules {
  9,l 298
  11,l 300
  32,l 301
  53,l 306
  6,l 297
  28,l 301
  50,l 305
  49,l 305
  3,l 297
  25,l 301
  46,l 304
  0,l 308
  22,l 301
  43,l 304
  18,l 301
  40,l 302
  39,l 302
  15,l 301
  36,l 302
  57,l 307
  12,l 299
  33,l 301
  54,l 306
  7,l 297
  29,l 301
  30,l 301
  51,l 306
  4,l 297
  26,l 301
  47,l 304
  1,l 297
  23,l 301
  44,l 304
  19,l 301
  20,l 301
  41,l 303
  16,l 301
  37,l 302
  13,l 301
  34,l 302
  55,l 307
  8,l 298
  10,l 299
  31,l 301
  52,l 306
  5,l 297
  27,l 301
  48,l 305
  2,l 297
  24,l 301
  45,l 304
  21,l 301
  42,l 303
  17,l 301
  38,l 302
  14,l 301
  35,l 302
  56,l 307
}

array set illustrate::rules {
  12,dc 3
  26,dc 1
  3,dc 1
  41,dc 1
  55,dc 0
  18,dc 2
  33,dc 1
  9,dc 1
  47,dc 1
  11,dc 0
  25,dc 2
  2,dc 1
  40,dc 1
  39,dc 1
  54,dc 1
  17,dc 2
  32,dc 1
  8,dc 1
  46,dc 1
  10,dc 1
  24,dc 2
  1,dc 0
  38,dc 1
  53,dc 1
  16,dc 2
  31,dc 1
  7,dc 1
  45,dc 1
  23,dc 2
  0,dc 1
  37,dc 1
  52,dc 1
  15,dc 1
  29,dc 2
  30,dc 1
  6,dc 1
  44,dc 1
  22,dc 2
  36,dc 1
  51,dc 0
  14,dc 1
  28,dc 2
  5,dc 1
  43,dc 1
  57,dc 1
  21,dc 2
  35,dc 1
  50,dc 2
  49,dc 2
  13,dc 0
  27,dc 2
  4,dc 1
  42,dc 1
  56,dc 1
  19,dc 2
  20,dc 2
  34,dc 1
  48,dc 1
}

array set illustrate::rules {
  41,line 120
  7,line 75
  37,line 114
  4,line 72
  34,line 111
  1,line 69
  31,line 106
  27,line 101
  24,line 98
  21,line 95
  17,line 90
  14,line 86
  11,line 81
  56,line 143
  53,line 138
  50,line 133
  49,line 132
  46,line 127
  43,line 124
  9,line 78
  40,line 117
  39,line 116
  6,line 74
  36,line 113
  3,line 71
  33,line 108
  29,line 104
  30,line 105
  26,line 100
  23,line 97
  19,line 92
  20,line 94
  16,line 89
  13,line 85
  10,line 81
  55,line 142
  52,line 137
  48,line 131
  45,line 126
  42,line 121
  8,line 77
  38,line 115
  5,line 73
  35,line 112
  2,line 70
  32,line 107
  28,line 102
  25,line 99
  22,line 96
  18,line 91
  15,line 88
  12,line 82
  57,line 144
  54,line 139
  51,line 136
  47,line 128
  11,e 1
  44,line 125
}

array set illustrate::lr1_table {
  66,trans {}
  35 {{18 {0 269} 2}}
  14,trans {{271 41} {278 42} {303 43}}
  36 {{53 {0 269} 1}}
  33,trans {}
  37 {{54 {0 269} 1}}
  52,trans {}
  38 {{52 {0 269} 1}}
  40 {{27 {0 269} 2}}
  39 {{24 {0 269} 2}}
  18,trans {{290 54} {291 55} {292 56} {293 57} {294 58} {295 59} {296 60} {302 61}}
  41 {{42 {0 269} 1}}
  1,trans {}
  37,trans {}
  42 {{41 {0 269} 1}}
  56,trans {}
  43 {{21 {0 269} 2}}
  44 {{48 {0 269} 1}}
  23,trans {}
  45 {{50 {0 269} 1}}
  5,trans {}
  42,trans {}
  46 {{49 {0 269} 1}}
  61,trans {}
  47 {{23 {0 269} 2}}
  48 {{43 {0 269} 1}}
  27,trans {}
  50 {{46 {0 269} 1}}
  49 {{47 {0 269} 1}}
  9,trans {{261 25} {262 26} {263 27} {264 28} {265 29} {266 30} {297 31}}
  46,trans {{269 66}}
  51 {{45 {0 269} 1}}
  65,trans {}
  52 {{44 {0 269} 1}}
  53 {{22 {0 269} 2}}
  13,trans {{269 40}}
  32,trans {}
  54 {{34 {0 269} 1}}
  51,trans {}
  55 {{35 {0 269} 1}}
  56 {{36 {0 269} 1}}
  57 {{37 {0 269} 1}}
  17,trans {{270 48} {271 49} {278 50} {279 51} {283 52} {304 53}}
  0,trans {{257 1} {258 2} {259 3} {260 4} {269 5} {272 6} {273 7} {274 8} {275 9} {276 10} {277 11} {280 12} {281 13} {282 14} {284 15} {285 16} {286 17} {287 18} {288 19} {289 20} {299 21} {301 22}}
  36,trans {}
  58 {{38 {0 269} 1}}
  55,trans {}
  60 {{40 {0 269} 1}}
  59 {{39 {0 269} 1}}
  61 {{16 {0 269} 2}}
  22,trans {{300 64}}
  62 {{28 {0 269} 2}}
  4,trans {}
  41,trans {}
  63 {{19 {0 269} 2}}
  60,trans {}
  59,trans {}
  64 {{12 0 2}}
  65 {{50 {0 269} 2}}
  66 {{49 {0 269} 2}}
  26,trans {}
  8,trans {{269 24}}
  67 {{12 0 3}}
  45,trans {{269 65}}
  64,trans {{269 67}}
  12,trans {{270 36} {272 37} {286 38} {306 39}}
  31,trans {}
  50,trans {}
  49,trans {}
  16,trans {{269 44} {270 45} {286 46} {305 47}}
  35,trans {}
  54,trans {}
  21,trans {}
  3,trans {}
  40,trans {}
  39,trans {}
  58,trans {}
  10 {{25 {0 269} 1} {55 {0 269} 0} {56 {0 269} 0} {57 {0 269} 0}}
  11 {{18 {0 269} 1} {1 {0 269} 0} {2 {0 269} 0} {3 {0 269} 0} {4 {0 269} 0} {5 {0 269} 0} {6 {0 269} 0} {7 {0 269} 0}}
  25,trans {}
  12 {{24 {0 269} 1} {51 {0 269} 0} {52 {0 269} 0} {53 {0 269} 0} {54 {0 269} 0}}
  7,trans {{269 23}}
  44,trans {}
  13 {{27 {0 269} 1}}
  63,trans {}
  14 {{21 {0 269} 1} {41 {0 269} 0} {42 {0 269} 0}}
  15 {{14 {0 269} 1}}
  11,trans {{261 25} {262 26} {263 27} {264 28} {265 29} {266 30} {297 35}}
  30,trans {}
  29,trans {}
  16 {{23 {0 269} 1} {48 {0 269} 0} {49 {0 269} 0} {50 {0 269} 0}}
  48,trans {}
  0 {{0 0 0} {10 0 0} {12 0 0} {13 {0 269} 0} {14 {0 269} 0} {15 {0 269} 0} {16 {0 269} 0} {17 {0 269} 0} {18 {0 269} 0} {19 {0 269} 0} {20 {0 269} 0} {21 {0 269} 0} {22 {0 269} 0} {23 {0 269} 0} {24 {0 269} 0} {25 {0 269} 0} {26 {0 269} 0} {27 {0 269} 0} {28 {0 269} 0} {29 {0 269} 0} {30 {0 269} 0} {31 {0 269} 0} {32 {0 269} 0} {33 {0 269} 0}}
  17 {{22 {0 269} 1} {43 {0 269} 0} {44 {0 269} 0} {45 {0 269} 0} {46 {0 269} 0} {47 {0 269} 0}}
  67,trans {}
  1 {{31 {0 269} 1}}
  18 {{16 {0 269} 1} {34 {0 269} 0} {35 {0 269} 0} {36 {0 269} 0} {37 {0 269} 0} {38 {0 269} 0} {39 {0 269} 0} {40 {0 269} 0}}
  15,trans {}
  2 {{32 {0 269} 1}}
  19 {{28 {0 269} 1} {1 {0 269} 0} {2 {0 269} 0} {3 {0 269} 0} {4 {0 269} 0} {5 {0 269} 0} {6 {0 269} 0} {7 {0 269} 0}}
  20 {{19 {0 269} 1}}
  34,trans {}
  3 {{33 {0 269} 1}}
  21 {{0 0 1}}
  53,trans {}
  4 {{30 {0 269} 1}}
  22 {{10 0 1} {12 0 1} {11 269 0}}
  5 {{26 {0 269} 1}}
  23 {{17 {0 269} 2}}
  20,trans {{267 63}}
  19,trans {{261 25} {262 26} {263 27} {264 28} {265 29} {266 30} {297 62}}
  6 {{15 {0 269} 1}}
  2,trans {}
  24 {{29 {0 269} 2}}
  38,trans {}
  7 {{17 {0 269} 1}}
  25 {{2 {0 269} 1}}
  57,trans {}
  8 {{29 {0 269} 1}}
  26 {{5 {0 269} 1}}
  9 {{20 {0 269} 1} {1 {0 269} 0} {2 {0 269} 0} {3 {0 269} 0} {4 {0 269} 0} {5 {0 269} 0} {6 {0 269} 0} {7 {0 269} 0}}
  27 {{3 {0 269} 1}}
  24,trans {}
  6,trans {}
  28 {{6 {0 269} 1}}
  43,trans {}
  29 {{4 {0 269} 1}}
  30 {{7 {0 269} 1}}
  62,trans {}
  31 {{20 {0 269} 2}}
  32 {{56 {0 269} 1}}
  10,trans {{270 32} {286 33} {307 34}}
  28,trans {}
  33 {{57 {0 269} 1}}
  47,trans {}
  34 {{25 {0 269} 2}}
}

array set illustrate::token_id_table {
  286 SELECT_
  286,t 0
  287 SHAPE_
  292,line 49
  302,line 110
  288 SHOW_
  265,title TRUE
  289 WIDTH_
  290 CIRCLE_
  300 @PSEUDO1
  284,title OPEN
  291 ELLIPSE_
  301 illustrate
  292 BOX_
  302 shape
  288,line 44
  293 POLYGON_
  303 move
  304 select
  294 LINE_
  305 save
  295 TEXT_
  306 list
  296 IMAGE_
  307 delete
  262,t 0
  297 yesno
  308 start'
  285,line 41
  298 numeric
  299 command
  283,t 0
  282,line 38
  264,title OFF
  283,title NONE
  278,line 34
  error,line 67
  258,t 0
  275,line 31
  279,t 0
  280,t 0
  272,line 28
  263,title ON
  282,title MOVE
  268,line 20
  276,t 0
  265,line 16
  307,t 1
  297,t 1
  262,line 13
  262,title NO
  0 {$}
  0,t 0
  281,title LOAD
  error,t 0
  299,title {}
  258,line 8
  273,t 0
  304,t 1
  294,t 0
  261,title YES
  279,title INVERT
  280,title LIST
  308,title {}
  269,t 0
  270,t 0
  298,title {}
  291,t 0
  301,t 1
  307,line 141
  266,t 0
  260,title UNDO
  259,title PASTE
  297,line 68
  278,title FRONT
  307,title {}
  297,title {}
  287,t 0
  304,line 123
  294,line 51
  291,line 48
  error,title {}
  301,line 84
  263,t 0
  258,title COPY
  287,line 43
  277,title FILL
  284,t 0
  306,title {}
  296,title IMAGE
  284,line 40
  281,line 37
  260,t 0
  259,t 0
  281,t 0
  257,title CUT
  277,line 33
  276,title DELETE
  305,title {}
  295,title TEXT
  274,line 30
  271,line 27
  277,t 0
  308,t 1
  267,line 19
  298,t 1
  275,title DASH
  304,title {}
  294,title LINE
  264,line 15
  261,line 12
  274,t 0
  305,t 1
  295,t 0
  257,line 7
  274,title COMMAND
  293,title POLYGON
  303,title {}
  271,t 0
  error error
  292,t 0
  302,t 1
  273,title COLOR
  292,title BOX
  302,title {}
  267,t 0
  299,line 80
  288,t 0
  306,line 135
  296,line 53
  272,title CLOSE
  303,line 119
  291,title ELLIPSE
  293,line 50
  301,title {}
  264,t 0
  285,t 0
  289,line 45
  290,line 47
  300,line 81
  286,line 42
  271,title BACK
  261,t 0
  283,line 39
  289,title WIDTH
  290,title CIRCLE
  300,title {}
  282,t 0
  279,line 35
  280,line 36
  276,line 32
  257,t 0
  269,title string
  270,title ALL
  273,line 29
  288,title SHOW
  278,t 0
  299,t 1
  269,line 22
  270,line 26
  266,line 17
  268,title float
  275,t 0
  263,line 14
  287,title SHAPE
  306,t 1
  296,t 0
  260,line 10
  259,line 9
  272,t 0
  267,title integer
  303,t 1
  257 CUT_
  286,title SELECT
  293,t 0
  258 COPY_
  260 UNDO_
  259 PASTE_
  261 YES_
  262 NO_
  263 ON_
  264 OFF_
  265 TRUE_
  266 FALSE_
  267 INT_
  268,t 0
  268 REAL_
  269 STRING_
  270 ALL_
  271 BACK_
  272 CLOSE_
  289,t 0
  290,t 0
  300,t 1
  266,title FALSE
  273 COLOR_
  274 COMMAND_
  285,title SAVE
  275 DASH_
  308,line 145
  276 DELETE_
  298,line 76
  277 FILL_
  278 FRONT_
  279 INVERT_
  280 LIST_
  281 LOAD_
  305,line 130
  282 MOVE_
  295,line 52
  265,t 0
  283 NONE_
  284 OPEN_
  285 SAVE_
}

proc illustrate::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { set _ 1 }
                    2 { set _ 1 }
                    3 { set _ 1 }
                    4 { set _ 1 }
                    5 { set _ 0 }
                    6 { set _ 0 }
                    7 { set _ 0 }
                    8 { set _ $1 }
                    9 { set _ $1 }
                    11 { global ds9; if {!$ds9(init)} {YYERROR} else {yyclearin; YYACCEPT} }
                    13 { IllustrateCmdLoad }
                    14 { IllustrateCmdOpen }
                    15 { IllustrateCmdClose }
                    16 { ProcessCmdSet illustrate shape $2 {} }
                    17 { ProcessCmdSet illustrate color $2 IllustrateColor }
                    18 { ProcessCmdSet illustrate fill $2 IllustrateColor }
                    19 { ProcessCmdSet illustrate width $2 IllustrateWidth }
                    20 { ProcessCmdSet illustrate dash $2 IllustrateWidth }
                    26 { IllustrateLoadFn $1 }
                    27 { IllustrateLoadFn $2 }
                    28 { ProcessCmdSet illustrate show $2 IllustrateShow }
                    29 { IllustrateCmdCommand $2 }
                    30 { IllustrateUndo }
                    31 { IllustrateCut }
                    32 { IllustrateMenuCopy }
                    33 { IllustratePaste }
                    34 { set _ circle }
                    35 { set _ ellipse }
                    36 { set _ box }
                    37 { set _ polygon }
                    38 { set _ line }
                    39 { set _ text }
                    40 { set _ image }
                    41 { IllustrateMoveFront }
                    42 { IllustrateMoveBack }
                    43 { IllustrateSelectAll }
                    44 { IllustrateSelectNone }
                    45 { IllustrateInvertSelect }
                    46 { IllustrateSelectFront }
                    47 { IllustrateSelectBack }
                    48 { IllustrateSaveAllFn $1 }
                    49 { IllustrateSaveSelectFn $2 }
                    50 { IllustrateSaveAll $2 }
                    51 { IllustrateListAll }
                    52 { IllustrateListSelect }
                    53 { IllustrateListAll }
                    54 { SimpleTextDestroy illustratetxt }
                    55 { IllustrateDeleteAll }
                    56 { IllustrateDeleteAll }
                    57 { IllustrateDeleteSelect }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc illustrate::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
