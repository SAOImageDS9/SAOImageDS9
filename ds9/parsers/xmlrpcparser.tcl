package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval xmlrpc {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc xmlrpc::YYABORT {} {
    return -code return 1
}

proc xmlrpc::YYACCEPT {} {
    return -code return 0
}

proc xmlrpc::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc xmlrpc::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc xmlrpc::yyerror {s} {
    puts stderr $s
}

proc xmlrpc::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc xmlrpc::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set xmlrpc::table {
  53:292,target 60
  3:288,target 11
  15:278,target 31
  61:278,target 65
  47:270 shift
  47:269 shift
  17:264 shift
  60:274,target 64
  58:270,target 34
  58:269,target 34
  6:0,target 1
  2:0 accept
  56:270 reduce
  56:269 reduce
  48:274,target 18
  47:270,target 16
  47:269,target 15
  17:264,target 34
  35:258 reduce
  24:267,target 22
  39:262,target 10
  65:270 reduce
  56:280 reduce
  35:265 reduce
  43:273,target 32
  35:266 reduce
  56:280,target 37
  47:292 goto
  35:265,target 9
  11:258,target 19
  47:297 goto
  14:262 shift
  44:272 shift
  3:259 shift
  44:273 shift
  50:274,target 31
  44:274 shift
  15:293,target 33
  48:270,target 18
  48:269,target 18
  55:273,target 28
  53:270 shift
  53:269 shift
  5:270,target 16
  5:269,target 15
  25:267,target 14
  23:266 reduce
  4:265,target 12
  15:272,target 29
  23:267 reduce
  23:268 reduce
  44:273,target 42
  51:276,target 58
  62:270 reduce
  62:269 reduce
  57:280,target 61
  27:274,target 19
  50:272,target 31
  32:270 reduce
  16:274,target 20
  44:295 goto
  11:258 shift
  62:280 reduce
  15:270,target 27
  37:267,target 16
  53:292 goto
  3:288 goto
  41:270 reduce
  11:265 shift
  11:266 shift
  9:0 reduce
  20:258 shift
  35:258,target 9
  49:266 reduce
  49:267 reduce
  18:260,target 35
  22:292,target 38
  49:268 reduce
  28:295,target 45
  30:278,target 46
  50:272 reduce
  45:273,target 29
  50:273 reduce
  50:274 reduce
  28:274,target 43
  27:269,target 19
  27:270,target 19
  58:270 reduce
  58:269 reduce
  6:0 reduce
  13:258,target 12
  49:267,target 15
  7:0,target 2
  0:281 shift
  16:269,target 20
  16:270,target 20
  62:270,target 36
  62:269,target 36
  11:289 goto
  1:287,target 9
  0:283 goto
  28:272 shift
  28:273 shift
  22:268,target 37
  28:274 shift
  0:283,target 2
  11:289,target 20
  28:272,target 41
  37:266 reduce
  37:267 reduce
  34:0,target 8
  37:268 reduce
  26:0,target 7
  46:270 reduce
  1:285,target 7
  16:264 reduce
  57:292,target 62
  0:281,target 1
  16:268 reduce
  42:276,target 52
  16:269 reduce
  16:270 reduce
  21:262,target 11
  48:280,target 18
  28:294 goto
  64:274,target 30
  28:295 goto
  11:266,target 13
  16:274 reduce
  63:270,target 33
  63:269,target 33
  55:272 reduce
  15:282,target 32
  25:266 reduce
  55:273 reduce
  40:267,target 13
  5:270 shift
  5:269 shift
  25:267 reduce
  55:274 reduce
  25:268 reduce
  23:268,target 17
  12:290,target 24
  16:280 reduce
  52:270,target 35
  52:269,target 35
  64:272 reduce
  64:273 reduce
  42:274,target 50
  12:268,target 23
  64:274 reduce
  64:272,target 30
  41:270,target 23
  13:258 reduce
  13:262 reduce
  23:266,target 17
  29:270,target 24
  43:272 reduce
  5:292 goto
  47:292,target 56
  43:273 reduce
  43:274 reduce
  12:266,target 21
  52:270 reduce
  52:269 reduce
  15:277,target 30
  24:268,target 23
  36:0 reduce
  53:270,target 16
  53:269,target 15
  22:268 shift
  51:282,target 59
  22:269 shift
  22:270 shift
  27:280,target 19
  43:274,target 32
  35:266,target 9
  4:289,target 14
  1:257,target 3
  39:258 reduce
  16:280,target 20
  62:280,target 36
  31:270 reduce
  39:262 reduce
  24:266,target 39
  61:278 shift
  31:270,target 27
  40:266 reduce
  40:267 reduce
  8:0,target 3
  40:268 reduce
  43:272,target 32
  5:292,target 17
  65:270,target 25
  7:0 reduce
  48:264 reduce
  18:260 shift
  22:292 goto
  55:274,target 28
  25:268,target 14
  44:295,target 55
  48:268 reduce
  54:270,target 22
  48:270 reduce
  48:269 reduce
  4:266,target 13
  19:0,target 6
  39:258,target 10
  44:274,target 43
  48:274 reduce
  50:273,target 31
  57:270 shift
  57:269 shift
  10:282 shift
  27:264 reduce
  48:280 reduce
  48:268,target 18
  55:272,target 28
  25:266,target 14
  26:0 reduce
  27:268 reduce
  32:270,target 21
  27:269 reduce
  27:270 reduce
  15:271,target 28
  37:268,target 16
  57:280 shift
  44:272,target 54
  3:259,target 10
  27:274 reduce
  13:262,target 12
  27:280 reduce
  30:279,target 47
  57:292 goto
  45:274,target 29
  37:266,target 16
  45:272 reduce
  45:273 reduce
  45:274 reduce
  15:270 shift
  49:268,target 15
  15:271 shift
  4:265 shift
  15:272 shift
  54:270 reduce
  4:266 shift
  19:0 reduce
  33:270,target 48
  48:264,target 18
  24:266 shift
  28:294,target 44
  24:267 shift
  15:277 shift
  24:268 shift
  38:268,target 49
  45:272,target 29
  15:278 shift
  22:269,target 15
  22:270,target 16
  28:273,target 42
  63:270 reduce
  63:269 reduce
  14:262,target 26
  15:282 shift
  27:268,target 19
  49:266,target 15
  56:270,target 37
  56:269,target 37
  33:270 shift
  16:268,target 20
  1:286,target 8
  15:293 goto
  4:289 goto
  1:257 shift
  47:297,target 57
  12:266 shift
  1:261 shift
  12:267 shift
  21:258 reduce
  24:291 goto
  42:274 shift
  12:268 shift
  42:275 shift
  9:0,target 4
  1:263 shift
  20:258,target 36
  42:276 shift
  2:0,target 0
  21:262 reduce
  40:268,target 13
  34:0 reduce
  42:296,target 53
  1:284,target 6
  12:291,target 25
  36:0,target 5
  51:276 shift
  42:275,target 51
  1:263,target 5
  57:270,target 16
  57:269,target 15
  10:282,target 18
  8:0 reduce
  27:264,target 19
  64:273,target 30
  51:282 shift
  11:265,target 12
  60:274 shift
  29:270 reduce
  59:276 shift
  40:266,target 13
  46:270,target 26
  12:290 goto
  16:264,target 20
  42:296 goto
  1:284 goto
  12:291 goto
  23:267,target 17
  59:276,target 63
  1:285 goto
  1:286 goto
  1:287 goto
  38:268 shift
  30:278 shift
  1:261,target 4
  12:267,target 22
  21:258,target 11
  24:291,target 40
  30:279 shift
}

array set xmlrpc::rules {
  9,l 288
  11,l 289
  32,l 295
  6,l 285
  28,l 294
  3,l 284
  25,l 293
  0,l 298
  22,l 293
  18,l 292
  15,l 291
  36,l 297
  12,l 289
  33,l 296
  7,l 286
  29,l 294
  30,l 295
  4,l 284
  26,l 293
  1,l 283
  23,l 293
  19,l 292
  20,l 292
  16,l 291
  37,l 297
  13,l 290
  34,l 296
  8,l 287
  10,l 289
  31,l 295
  5,l 285
  27,l 293
  2,l 284
  24,l 293
  21,l 293
  17,l 291
  14,l 290
  35,l 296
}

array set xmlrpc::rules {
  12,dc 1
  26,dc 2
  3,dc 1
  18,dc 3
  33,dc 3
  9,dc 3
  11,dc 2
  25,dc 5
  2,dc 1
  17,dc 1
  32,dc 1
  8,dc 3
  10,dc 3
  24,dc 1
  1,dc 2
  16,dc 2
  31,dc 2
  7,dc 3
  23,dc 2
  0,dc 1
  37,dc 1
  15,dc 3
  29,dc 1
  30,dc 4
  6,dc 3
  22,dc 3
  36,dc 2
  14,dc 1
  28,dc 2
  5,dc 4
  21,dc 1
  35,dc 1
  13,dc 2
  27,dc 1
  4,dc 1
  19,dc 2
  20,dc 1
  34,dc 2
}

array set xmlrpc::rules {
  7,line 59
  37,line 113
  4,line 52
  34,line 108
  1,line 47
  31,line 103
  27,line 95
  24,line 92
  21,line 88
  17,line 79
  14,line 74
  11,line 69
  9,line 65
  6,line 56
  36,line 112
  3,line 51
  33,line 107
  29,line 99
  30,line 102
  26,line 94
  23,line 90
  19,line 83
  20,line 84
  16,line 78
  13,line 73
  10,line 68
  8,line 62
  5,line 55
  35,line 109
  2,line 50
  32,line 104
  28,line 98
  25,line 93
  22,line 89
  18,line 82
  15,line 77
  12,line 70
}

array set xmlrpc::lr1_table {
  66,trans {}
  35 {{18 264 2}}
  85,trans {}
  36 {{8 0 3}}
  14,trans {{262 28}}
  33,trans {}
  37 {{9 {258 265 266} 3}}
  52,trans {}
  38 {{11 258 2}}
  71,trans {{276 79}}
  40 {{5 0 4}}
  39 {{10 258 2} {13 {266 267 268} 1} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  41 {{16 {266 267 268} 2}}
  18,trans {{260 37}}
  1,trans {{257 3} {261 4} {263 5} {284 6} {285 7} {286 8} {287 9}}
  37,trans {}
  42 {{18 268 1} {19 268 1} {21 270 0} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0}}
  56,trans {}
  43 {{20 268 1}}
  75,trans {}
  44 {{15 {266 267 268} 2}}
  45 {{10 262 3}}
  23,trans {}
  5,trans {{269 15} {270 16} {292 17}}
  42,trans {{270 56} {271 30} {272 31} {277 32} {278 33} {282 34} {293 57}}
  46 {{13 {266 267 268} 2}}
  61,trans {}
  47 {{23 270 2}}
  80,trans {}
  79,trans {}
  48 {{30 {272 273 274} 1} {31 {272 273 274} 1} {33 {269 270} 0} {34 {269 270} 0} {35 {269 270} 0}}
  50 {{22 270 2} {28 {272 273 274} 1} {30 {272 273 274} 0} {31 {272 273 274} 0} {32 {272 273 274} 0}}
  49 {{32 {272 273 274} 1}}
  27,trans {}
  9,trans {}
  46,trans {}
  51 {{29 {272 273 274} 1}}
  65,trans {{270 75} {271 30} {272 31} {277 32} {278 33} {282 34} {293 76}}
  52 {{26 270 2}}
  84,trans {}
  53 {{25 270 2} {36 {269 270 280} 0} {37 {269 270 280} 0} {18 {269 270 280} 0} {19 {269 270 280} 0} {20 {269 270 280} 0}}
  13,trans {}
  54 {{18 264 3}}
  32,trans {{278 52} {279 53}}
  51,trans {}
  55 {{10 258 3}}
  70,trans {}
  69,trans {}
  56 {{19 268 2}}
  57 {{18 268 2}}
  17,trans {{264 36}}
  0,trans {{281 1} {283 2}}
  58 {{15 {266 267 268} 3}}
  36,trans {}
  55,trans {}
  60 {{33 {269 270} 1} {34 {269 270} 1}}
  59 {{31 {272 273 274} 2}}
  74,trans {{274 82}}
  61 {{35 {269 270} 1}}
  62 {{30 {272 273 274} 2} {18 274 0} {19 274 0} {20 274 0}}
  22,trans {{258 40}}
  4,trans {{265 12} {266 13} {289 14}}
  63 {{22 270 3}}
  41,trans {}
  60,trans {{276 70} {282 71}}
  59,trans {}
  64 {{28 {272 273 274} 2}}
  78,trans {}
  65 {{18 {269 270 280} 1} {19 {269 270 280} 1} {21 270 0} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0}}
  66 {{20 {269 270 280} 1}}
  26,trans {{266 45} {267 24} {268 25} {291 46}}
  8,trans {}
  67 {{37 {269 270 280} 1}}
  45,trans {}
  64,trans {}
  68 {{25 270 3} {36 {269 270 280} 1} {18 {269 270 280} 0} {19 {269 270 280} 0} {20 {269 270 280} 0}}
  83,trans {}
  70 {{34 {269 270} 2}}
  69 {{18 268 3}}
  12,trans {{266 23} {267 24} {268 25} {290 26} {291 27}}
  71 {{33 {269 270} 2}}
  31,trans {}
  72 {{18 274 1} {19 274 1} {21 270 0} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0}}
  50,trans {{272 63} {273 48} {274 49} {295 64}}
  49,trans {}
  68,trans {{269 65} {270 66} {280 77} {292 78}}
  73 {{20 274 1}}
  74 {{30 {272 273 274} 3}}
  16,trans {}
  75 {{19 {269 270 280} 2}}
  35,trans {{270 54}}
  76 {{18 {269 270 280} 2}}
  54,trans {}
  73,trans {}
  77 {{25 270 4}}
  78 {{36 {269 270 280} 2}}
  21,trans {}
  3,trans {{259 10} {288 11}}
  80 {{19 274 2}}
  79 {{33 {269 270} 3}}
  40,trans {}
  39,trans {{266 55} {267 24} {268 25} {291 46}}
  81 {{18 274 2}}
  58,trans {}
  10 {{9 {258 265 266} 1}}
  77,trans {{278 84}}
  82 {{30 {272 273 274} 4}}
  11 {{5 0 2} {6 0 2} {10 258 0} {11 258 0} {12 258 0}}
  83 {{18 {269 270 280} 3}}
  25,trans {}
  12 {{10 262 1} {11 262 1} {13 {266 267 268} 0} {14 {266 267 268} 0} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  7,trans {}
  84 {{25 270 5}}
  44,trans {{268 58}}
  13 {{12 262 1}}
  85 {{18 274 3}}
  63,trans {}
  14 {{7 0 2}}
  82,trans {}
  15 {{18 264 1} {19 264 1} {21 270 0} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0}}
  11,trans {{258 19} {265 20} {266 21} {289 22}}
  30,trans {{272 47} {273 48} {274 49} {294 50} {295 51}}
  29,trans {}
  16 {{20 264 1}}
  48,trans {{274 59} {275 60} {276 61} {296 62}}
  0 {{0 0 0} {1 0 0}}
  17 {{8 0 2}}
  67,trans {}
  1 {{1 0 1} {2 0 0} {3 0 0} {4 0 0} {5 0 0} {6 0 0} {7 0 0} {8 0 0}}
  18 {{9 {258 265 266} 2}}
  15,trans {{270 29} {271 30} {272 31} {277 32} {278 33} {282 34} {293 35}}
  2 {{0 0 1}}
  19 {{6 0 3}}
  20 {{10 258 1} {11 258 1} {13 {266 267 268} 0} {14 {266 267 268} 0} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  34,trans {}
  3 {{5 0 1} {6 0 1} {9 {258 265 266} 0}}
  21 {{12 258 1}}
  53,trans {{269 65} {270 66} {292 67} {297 68}}
  4 {{7 0 1} {10 262 0} {11 262 0} {12 262 0}}
  22 {{5 0 3}}
  72,trans {{270 80} {271 30} {272 31} {277 32} {278 33} {282 34} {293 81}}
  5 {{8 0 1} {18 264 0} {19 264 0} {20 264 0}}
  23 {{11 262 2}}
  20,trans {{266 38} {267 24} {268 25} {290 39} {291 27}}
  19,trans {}
  6 {{1 0 2}}
  2,trans {}
  24 {{15 {266 267 268} 1} {16 {266 267 268} 1} {18 268 0} {19 268 0} {20 268 0}}
  38,trans {}
  7 {{2 0 1}}
  25 {{17 {266 267 268} 1}}
  57,trans {{270 69}}
  8 {{3 0 1}}
  26 {{10 262 2} {13 {266 267 268} 1} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  76,trans {{270 83}}
  9 {{4 0 1}}
  27 {{14 {266 267 268} 1}}
  24,trans {{268 41} {269 42} {270 43} {292 44}}
  6,trans {}
  28 {{7 0 3}}
  43,trans {}
  29 {{19 264 2}}
  30 {{22 270 1} {23 270 1} {28 {272 273 274} 0} {29 {272 273 274} 0} {30 {272 273 274} 0} {31 {272 273 274} 0} {32 {272 273 274} 0}}
  62,trans {{269 72} {270 73} {292 74}}
  31 {{24 270 1}}
  81,trans {{270 85}}
  10,trans {{282 18}}
  32 {{25 270 1} {26 270 1}}
  28,trans {}
  33 {{27 270 1}}
  47,trans {}
  34 {{21 270 1}}
}

array set xmlrpc::token_id_table {
  286,t 1
  286 methodResponse
  280,title _DATA
  279,title DATA
  264,line 17
  298,title {}
  292,line 81
  287 fault
  270,t 0
  269,t 0
  288 methodName
  290 xparam
  289 params
  276,line 34
  265,title PARAMS
  291,t 1
  291 param
  284,title {}
  292 value
  274,t 0
  261,line 13
  293 type
  288,line 64
  257,t 0
  294 members
  270,title _VALUE
  269,title VALUE
  295,t 1
  295 member
  288,title {}
  273,line 31
  296 name
  278,t 0
  297 values
  257,line 8
  262,t 0
  298 start'
  285,line 54
  274,title _MEMBER
  293,title {}
  283,t 1
  270,line 26
  269,line 25
  297,line 111
  259,title METHODNAME
  260,title _METHODNAME
  266,t 0
  278,title _ARRAY
  297,title {}
  282,line 42
  287,t 1
  error error
  271,t 0
  264,title _FAULT
  266,line 20
  294,line 97
  283,title {}
  292,t 1
  278,line 37
  error,line 45
  275,t 0
  268,title _PARAM
  287,title {}
  258,t 0
  263,line 16
  291,line 76
  error,title {}
  296,t 1
  280,t 0
  279,t 0
  275,line 33
  273,title MEMBER
  292,title {}
  263,t 0
  259,line 10
  260,line 11
  287,line 61
  258,title _METHODCALL
  284,t 1
  277,title ARRAY
  296,title {}
  272,line 29
  267,t 0
  263,title FAULT
  288,t 1
  284,line 49
  282,title string
  272,t 0
  268,line 23
  296,line 106
  267,title PARAM
  293,t 1
  286,title {}
  257 METHODCALL_
  281,line 41
  276,t 0
  258 _METHODCALL_
  259,t 0
  259 METHODNAME_
  260 _METHODNAME_
  260,t 0
  272,title _STRUCT
  261 METHODRESPONSE_
  265,line 19
  297,t 1
  293,line 86
  291,title {}
  262 _METHODRESPONSE_
  281,t 0
  263 FAULT_
  277,line 36
  257,title METHODCALL
  264 _FAULT_
  264,t 0
  276,title _NAME
  265 PARAMS_
  295,title {}
  262,line 14
  266 _PARAMS_
  290,line 72
  289,line 67
  285,t 1
  267 PARAM_
  0,t 0
  0 {$}
  262,title _METHODRESPONSE
  268 _PARAM_
  268,t 0
  281,title string
  274,line 32
  270 _VALUE_
  269 VALUE_
  error,t 0
  271 STRUCT_
  290,t 1
  289,t 1
  272 _STRUCT_
  258,line 9
  286,line 58
  273,t 0
  273 MEMBER_
  266,title _PARAMS
  285,title {}
  274 _MEMBER_
  275 NAME_
  271,line 28
  298,line 114
  294,t 1
  276 _NAME_
  277,t 0
  277 ARRAY_
  271,title STRUCT
  290,title {}
  289,title {}
  283,line 46
  278 _ARRAY_
  261,t 0
  280 _DATA_
  279 DATA_
  298,t 1
  281 HEADER_
  267,line 22
  295,line 101
  282,t 0
  282 STRING_
  275,title NAME
  294,title {}
  283 command
  265,t 0
  284 which
  280,line 39
  279,line 38
  285 methodCall
  261,title METHODRESPONSE
}

proc xmlrpc::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { global parse; set parse(result) $2 }
                    2 { set _ $1 }
                    3 { set _ $1 }
                    4 { set _ $1 }
                    5 { set _ [list methodcall [list $2 $3]] }
                    6 { set _ [list methodcall [list $2]] }
                    7 { set _ [list methodresponse $2] }
                    8 { set _ [list fault $2] }
                    9 { set _ [list methodname $2] }
                    10 { set _ [list params $2] }
                    11 { set _ [list params {}] }
                    12 { set _ [list params {}] }
                    13 { lappend _ $2 }
                    14 { set _ [list $1] }
                    15 { set _ [list param $2] }
                    16 { set _ [list param {}] }
                    17 { set _ [list param {}] }
                    18 { set _ [list value $2] }
                    19 { set _ [list value {}] }
                    20 { set _ [list value {}] }
                    21 { set _ [list string "$1"] }
                    22 { set _ [list struct $2] }
                    23 { set _ [list struct {}] }
                    24 { set _ [list struct {}] }
                    25 { set _ [list array [list data $3]] }
                    26 { set _ [list array {}] }
                    27 { set _ [list array {}] }
                    28 { lappend _ $2 }
                    29 { set _ [list $1] }
                    30 { set _ [list member [list $2 $3]] }
                    31 { set _ [list member {}] }
                    32 { set _ [list member {}] }
                    33 { set _ [list name $2] }
                    34 { set _ [list name {}] }
                    35 { set _ [list name {}] }
                    36 { lappend _ $2 }
                    37 { set _ [list $1] }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc xmlrpc::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
