Title: headset


NAME
====
 ft_headsetl,ft_headseti,ft_headsetr,ft_headsets -Fitsy FITS header set routines.

SYNOPSIS
========
 

-
FITSCard ft_headsetl(FITSHead fits, char *name, int n, int lvalue, char *comm);
FITSCard ft_headseti(FITSHead fits, char *name, int n, int ivalue, char *comm);
FITSCard ft_headsetr(FITSHead fits, char *name, int n, double rvalue, int prec, char *comm);
FITSCard ft_headsets(FITSHead fits, char *name, int n, char *svalue, char *comm);


-
PARAMETERS
==========
  * #"FITSHead fits" - FITS header to search in.
  * #"char *name" - keyword name.
  * #"int n" - keyword index number, if is zero no
      index number is appended to the keyword.
  * #"int lvalue" - Logical to format as a FITS value.
  * #"char *comm" - Comment for the card.
  * #"int ivalue" - Integer to format as a FITS value.
  * #"double rvalue" - Double to format as a FITS value.
  * #"int prec" - The value is formatted
      at this precision.
  * #"char *svalue" - String to format as a FITS value.

DESCRIPTION
===========

 ft_headsetl
 -----------
 Find a FITS card in the header and format a logical value into it.

 ft_headseti
 -----------
 Find a FITS card in the header and format a logical value into it.

 ft_headsetr
 -----------
 Find a FITS card in the header and format a logical value into it.

 ft_headsets
 -----------
 Find a FITS card in the header and format a logical value into it.

EXAMPLES
========
 Set the value part of a card in a header:

+
		int	i = 15;
		double	d = 34.7;
		char   *c = "Shutter";

		FITSCard	fits;
		FITSCard	card;

	card = #ft_headsetl(fits, "Cosmic", 0, 1, "Removed Cosimics (silver bullet method)");
	card = #ft_headseti(fits, "IValue" , 0, i, "15 is the number");

	card = #ft_headsetr(fits, "Gain", 1, d, 2, "GAIN1");
	card = #ft_headsetr(fits, "Gain", 2, d, 2, "GAIN2");

	card = #ft_headsets(fits, "XHIST", 1, "Xray processed!", NULL);

	/* In this example the special pointer #ft_comment is used to 
	   use the existing comment in the card.
	 *-/
	card = #ft_headsets(fits, "FILTER", 0, "V", ft_comment);

+ 
