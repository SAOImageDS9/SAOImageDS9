'\"
'\" Generated from file 'crosshair\&.man' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 2003 Kevin Kenny
'\" Copyright (c) 2008 (docs) Andreas Kupries <andreas_kupries@users\&.sourceforge\&.net>
'\" Copyright (c) 2013 Frank Gover, Andreas Kupries
'\"
.TH "crosshair" n 1\&.1 tklib "Crosshairs"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
crosshair \- Crosshairs for Tk canvas
.SH SYNOPSIS
package require \fBTcl  ?8\&.4?\fR
.sp
package require \fBTk  ?8\&.4?\fR
.sp
package require \fBcrosshair  ?1\&.1?\fR
.sp
\fBcrosshair::crosshair\fR \fIw\fR ?\fIarg\fR\&.\&.\&.?
.sp
\fBcrosshair::off\fR \fIw\fR
.sp
\fBcrosshair::configure\fR \fIw\fR ?\fIarg\fR\&.\&.\&.?
.sp
\fBcrosshair::track\fR \fBon\fR \fIw\fR \fIcmdprefix\fR
.sp
\fBcrosshair::track\fR \fBoff\fR \fIw\fR
.sp
\fBcrosshair::bbox_add\fR \fIw\fR \fIbbox\fR
.sp
\fBcrosshair::bbox_remove\fR \fItoken\fR
.sp
.BE
.SH DESCRIPTION
The \fBcrosshair\fR package provides commands to (de)activate and
track crosshairs on canvas widgets\&.
.SH API
The following commands are exported to the public:
.TP
\fBcrosshair::crosshair\fR \fIw\fR ?\fIarg\fR\&.\&.\&.?
This command activates the display of a pair of cross-hairs for the
canvas widget \fIw\fR\&. The cross-hairs track the pointing device\&. The
result of the command is the empty string\&.
.sp
All arguments after the widget \fIw\fR are treated as options as for a
canvas line item in \fIw\fR\&. Of particular interest are \fB-fill\fR
and \fB-dash\fR\&.
.TP
\fBcrosshair::off\fR \fIw\fR
This command removes the cross-hairs from the canvas widget \fIw\fR\&.
Nothing is done if the widget had no cross-hairs\&. The result of the
command is the empty string\&.
.TP
\fBcrosshair::configure\fR \fIw\fR ?\fIarg\fR\&.\&.\&.?
This command changes the appearance of the cross-hairs in the canvas
widget \fIw\fR\&. It is an error to call it for a canvas which has no
cross-hairs\&.
.sp
All arguments after the widget \fIw\fR are treated as options as for a
canvas line item in \fIw\fR\&. Of particular interest are \fB-fill\fR
and \fB-dash\fR\&.
.sp
The result of the command are the current configuration settings\&.
.TP
\fBcrosshair::track\fR \fBon\fR \fIw\fR \fIcmdprefix\fR
This command activates reporting of the location of the cross-hairs in
the canvas widget \fIw\fR\&. It is an error to use this command for a
canvas which has no cross-hairs\&. The result of the command is the
empty string\&.
.sp
After the invokation of this command the specified command prefix
\fIcmdprefix\fR will be called whenever the mouse moves within the
canvas, with 7 arguments\&. These are, in order:
.RS
.IP [1]
The widget \fIw\fR
.IP [2]
The x-location of the cross-hairs, in pixels\&.
.IP [3]
The y-location of the cross-hairs, in pixels\&.
.IP [4]
The x-location of the top-left corner of the viewport, in pixels\&.
.IP [5]
The y-location of the top-left corner of the viewport, in pixels\&.
.IP [6]
The x-location of the bottom-right corner of the viewport, in pixels\&.
.IP [7]
The y-location of the bottom-right corner of the viewport, in pixels\&.
.RE
.IP
A previously existing callback for \fIw\fR will be disabled\&. I\&.e\&. per
canvas widget with cross-hairs only one callback reporting their
location is possible\&.
.TP
\fBcrosshair::track\fR \fBoff\fR \fIw\fR
This command disables the reporting of the location of the cross-hairs
in the canvas widget \fIw\fR\&. It is an error to use this command for a
canvas which has no cross-hairs\&. The result of the command is the
empty string\&.
.TP
\fBcrosshair::bbox_add\fR \fIw\fR \fIbbox\fR
This command adds a bounding box to the crosshairs for canvas \fIw\fR\&.
The crosshairs will only be active within that area\&.
.sp
The result of the command is a token with which the bounding
box can be removed again, see \fBcrosshair::bbox_remove\fR below\&.
.sp
The bounding box \fIbbox\fR is specified thorugh a list of 4
values, the lower left and upper right corners of the box\&. The order
of values in the list is:
.CS

llx lly urx ury
.CE
.sp
Note that this command can be used multiple times, each call
adding one more bounding box\&. In such a case the visible area is the
\fIunion\fR of all the specified bounding boxes\&.
.TP
\fBcrosshair::bbox_remove\fR \fItoken\fR
This command removes the bounding box specified by the \fItoken\fR (a
result of \fBcrosshair::bbox_add\fR) from the crosshairs for its
canvas widget\&.
.PP
.SH "BUGS, IDEAS, FEEDBACK"
This document, and the package it describes, will undoubtedly contain
bugs and other problems\&.
Please report such in the category \fItklib :: crosshair\fR of the
\fITcllib SF Trackers\fR [http://sourceforge\&.net/tracker/?group_id=12883]\&.
Please also report any ideas for enhancements you may have for either
package and/or documentation\&.
.SH "BUGS, IDEAS, FEEDBACK"
This document, and the package it describes, will undoubtedly contain
bugs and other problems\&.
Please report such in the category \fIcrosshair\fR of the
\fITklib Trackers\fR [http://core\&.tcl\&.tk/tklib/reportlist]\&.
Please also report any ideas for enhancements you may have for either
package and/or documentation\&.
.SH KEYWORDS
canvas, cross-hairs, location, tracking, viewport
.SH COPYRIGHT
.nf
Copyright (c) 2003 Kevin Kenny
Copyright (c) 2008 (docs) Andreas Kupries <andreas_kupries@users\&.sourceforge\&.net>
Copyright (c) 2013 Frank Gover, Andreas Kupries

.fi
