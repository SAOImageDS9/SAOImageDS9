package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval xmlrpc {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc xmlrpc::YYABORT {} {
    return -code return 1
}

proc xmlrpc::YYACCEPT {} {
    return -code return 0
}

proc xmlrpc::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc xmlrpc::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc xmlrpc::yyerror {s} {
    puts stderr $s
}

proc xmlrpc::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc xmlrpc::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set xmlrpc::table {
  48:276,target 47
  18:271,target 32
  17:258 shift
  71:274,target 32
  68:280 shift
  41:268,target 53
  3:288,target 9
  27:0 reduce
  70:270,target 35
  70:269,target 35
  69:270,target 38
  69:269,target 38
  50:299,target 63
  9:291 goto
  60:274,target 30
  47:274 reduce
  25:293,target 43
  58:270,target 19
  58:269,target 18
  47:275 reduce
  6:0,target 2
  47:276 reduce
  2:0 accept
  4:291,target 14
  48:274,target 59
  23:284,target 20
  26:266 reduce
  26:267 reduce
  24:267,target 17
  26:268 reduce
  39:262,target 9
  53:268,target 15
  56:278 shift
  29:266,target 6
  57:284,target 37
  52:264,target 19
  22:258,target 11
  49:276,target 31
  56:284 shift
  55:275,target 33
  65:278 shift
  14:262 shift
  31:268,target 20
  53:266,target 15
  59:270,target 24
  9:266,target 12
  33:296,target 48
  44:272 shift
  35:281 shift
  3:259 shift
  10:294,target 21
  49:274,target 31
  19:268,target 21
  20:268,target 18
  53:266 reduce
  53:267 reduce
  33:275,target 46
  70:284,target 35
  69:284,target 38
  53:268 reduce
  25:267,target 23
  68:280,target 72
  4:265,target 11
  23:268 shift
  58:284,target 20
  37:270,target 22
  23:269 shift
  23:270 shift
  62:270 reduce
  62:269 reduce
  43:268,target 13
  72:270,target 27
  12:258,target 12
  69:282,target 38
  30:0,target 4
  4:263,target 10
  23:284 shift
  31:264,target 20
  62:282 reduce
  71:274 reduce
  41:268 shift
  3:288 goto
  71:275 reduce
  62:284 reduce
  71:276 reduce
  46:298,target 58
  43:266,target 13
  11:266 shift
  50:270,target 19
  50:269,target 18
  11:267 shift
  19:264,target 21
  20:264,target 18
  11:268 shift
  26:267,target 14
  42:262,target 10
  32:284 shift
  23:294 goto
  46:277,target 56
  50:270 shift
  50:269 shift
  19:264 reduce
  20:264 reduce
  38:270,target 52
  1:289,target 7
  52:276,target 19
  49:274 reduce
  0:285,target 2
  11:292,target 25
  19:268 reduce
  20:268 reduce
  49:275 reduce
  19:269 reduce
  19:270 reduce
  20:269 reduce
  20:270 reduce
  49:276 reduce
  58:270 shift
  58:269 shift
  6:0 reduce
  23:294,target 41
  50:282 shift
  19:276 reduce
  20:276 reduce
  7:0,target 3
  28:0 reduce
  50:284 shift
  62:270,target 39
  62:269,target 39
  0:283 shift
  1:287,target 6
  67:270 reduce
  36:280,target 51
  19:282 reduce
  20:282 reduce
  0:285 goto
  11:292 goto
  0:283,target 1
  11:293 goto
  19:284 reduce
  20:284 reduce
  51:270,target 29
  21:264,target 39
  58:284 shift
  37:270 reduce
  50:294 goto
  11:268,target 24
  8:284 shift
  50:299 goto
  58:294 goto
  18:295,target 38
  50:284,target 20
  65:278,target 70
  46:276 shift
  18:274,target 34
  46:277 shift
  46:278 shift
  11:266,target 22
  47:275,target 34
  63:270,target 19
  63:269,target 18
  25:266 shift
  40:267,target 16
  25:267 shift
  31:276,target 20
  58:294,target 66
  55:274 reduce
  25:268 shift
  55:275 reduce
  23:268,target 40
  55:276 reduce
  64:270 reduce
  64:269 reduce
  52:270,target 19
  52:269,target 19
  50:282,target 61
  19:276,target 21
  20:276,target 18
  34:270 reduce
  71:275,target 32
  62:284,target 39
  61:280,target 67
  46:298 goto
  43:266 reduce
  43:267 reduce
  13:262 shift
  60:275,target 30
  43:268 reduce
  64:284 reduce
  22:262,target 11
  52:264 reduce
  22:258 reduce
  48:275,target 46
  18:270,target 31
  25:293 goto
  64:270,target 36
  64:269,target 36
  22:262 reduce
  62:282,target 39
  52:268 reduce
  52:270 reduce
  52:269 reduce
  9:291,target 17
  24:268,target 17
  66:276,target 71
  52:276 reduce
  31:264 reduce
  63:284,target 20
  4:290,target 13
  1:257,target 3
  52:282 reduce
  55:276,target 33
  31:268 reduce
  52:284 reduce
  31:269 reduce
  31:270 reduce
  39:262 reduce
  24:266,target 17
  70:270 reduce
  70:269 reduce
  69:270 reduce
  69:269 reduce
  52:284,target 19
  31:269,target 20
  31:270,target 20
  61:280 shift
  8:284,target 15
  53:267,target 15
  40:266 reduce
  40:267 reduce
  33:297,target 49
  29:265,target 6
  31:276 reduce
  40:268 reduce
  49:275,target 31
  19:269,target 21
  19:270,target 21
  20:269,target 18
  20:270,target 18
  56:278,target 64
  7:0 reduce
  63:282,target 68
  33:276,target 47
  12:262,target 12
  31:282 reduce
  55:274,target 33
  10:269 shift
  10:270 shift
  25:268,target 24
  31:284 reduce
  69:282 reduce
  30:0 reduce
  27:0,target 8
  70:284 reduce
  69:284 reduce
  54:270,target 23
  4:266,target 12
  52:282,target 19
  50:294,target 62
  48:274 shift
  9:265,target 11
  48:275 shift
  18:270 shift
  18:284,target 37
  64:284,target 36
  48:276 shift
  18:271 shift
  57:270 reduce
  57:269 reduce
  18:273 shift
  18:274 shift
  33:274,target 45
  10:284 shift
  25:266,target 42
  17:258,target 30
  18:279 shift
  18:282 shift
  44:272,target 54
  35:281,target 50
  3:259,target 8
  18:284 shift
  10:294 goto
  18:282,target 36
  43:267,target 13
  13:262,target 27
  57:284 reduce
  66:276 shift
  26:268,target 14
  10:269,target 18
  10:270,target 19
  31:284,target 20
  48:297 goto
  46:278,target 57
  15:260 shift
  5:0,target 1
  18:295 goto
  45:270 reduce
  36:280 shift
  11:293,target 26
  19:284,target 21
  20:284,target 18
  29:258,target 6
  18:279,target 35
  4:263 shift
  4:265 shift
  26:266,target 14
  54:270 reduce
  4:266 shift
  16:0,target 5
  31:282,target 20
  46:276,target 55
  24:266 reduce
  24:267 reduce
  24:268 reduce
  67:270,target 28
  19:282,target 21
  20:282,target 18
  63:270 shift
  63:269 shift
  14:262,target 28
  63:294,target 69
  9:258,target 16
  42:258 reduce
  32:284,target 44
  16:0 reduce
  42:262 reduce
  42:258,target 10
  72:270 reduce
  12:258 reduce
  33:274 shift
  33:275 shift
  1:286,target 5
  63:282 shift
  45:270,target 25
  33:276 shift
  12:262 reduce
  63:284 shift
  4:290 goto
  1:257 shift
  4:291 goto
  1:261 shift
  10:284,target 20
  34:270,target 26
  11:267,target 23
  47:276,target 34
  2:0,target 0
  51:270 reduce
  40:268,target 16
  21:264 shift
  63:294 goto
  9:258 shift
  23:269,target 18
  23:270,target 19
  29:258 reduce
  28:0,target 7
  9:265 shift
  59:270 reduce
  9:266 shift
  33:296 goto
  57:270,target 37
  57:269,target 37
  18:273,target 33
  29:265 reduce
  33:297 goto
  29:266 reduce
  71:276,target 32
  60:274 reduce
  47:274,target 34
  60:275 reduce
  60:276 reduce
  40:266,target 16
  60:276,target 30
  48:297,target 60
  1:286 goto
  15:260,target 29
  52:268,target 19
  1:287 goto
  56:284,target 65
  38:270 shift
  1:289 goto
  5:0 reduce
  1:261,target 4
}

array set xmlrpc::rules {
  9,l 290
  11,l 291
  32,l 297
  6,l 288
  28,l 295
  3,l 286
  25,l 295
  0,l 300
  22,l 295
  18,l 294
  39,l 299
  15,l 293
  36,l 298
  12,l 291
  33,l 297
  7,l 289
  29,l 295
  30,l 296
  4,l 287
  26,l 295
  1,l 285
  23,l 295
  19,l 294
  20,l 294
  16,l 293
  37,l 298
  13,l 292
  34,l 297
  8,l 289
  10,l 291
  31,l 296
  5,l 287
  27,l 295
  2,l 286
  24,l 295
  21,l 294
  17,l 293
  38,l 299
  14,l 292
  35,l 298
}

array set xmlrpc::rules {
  12,dc 1
  26,dc 1
  3,dc 1
  18,dc 1
  33,dc 2
  9,dc 3
  11,dc 2
  25,dc 2
  2,dc 1
  39,dc 1
  17,dc 1
  32,dc 4
  8,dc 3
  10,dc 3
  24,dc 3
  1,dc 2
  38,dc 2
  16,dc 2
  31,dc 1
  7,dc 3
  23,dc 3
  0,dc 1
  37,dc 1
  15,dc 3
  29,dc 2
  30,dc 2
  6,dc 3
  22,dc 1
  36,dc 2
  14,dc 1
  28,dc 4
  5,dc 3
  21,dc 1
  35,dc 3
  13,dc 2
  27,dc 5
  4,dc 4
  19,dc 3
  20,dc 2
  34,dc 1
}

array set xmlrpc::rules {
  7,line 67
  37,line 118
  4,line 60
  34,line 113
  1,line 53
  31,line 108
  27,line 102
  24,line 98
  21,line 91
  17,line 85
  14,line 80
  11,line 75
  9,line 71
  39,line 122
  6,line 64
  36,line 117
  3,line 57
  33,line 112
  29,line 104
  30,line 107
  26,line 101
  23,line 97
  19,line 89
  20,line 90
  16,line 84
  13,line 79
  10,line 74
  8,line 68
  38,line 121
  5,line 61
  35,line 116
  2,line 56
  32,line 111
  28,line 103
  25,line 99
  22,line 95
  18,line 88
  15,line 83
  12,line 76
}

array set xmlrpc::lr1_table {
  35 {{20 264 2}}
  66,trans {{278 78} {284 79}}
  36 {{23 270 1}}
  85,trans {{270 93}}
  37 {{24 270 1} {25 270 1} {30 {274 275 276} 0} {31 {274 275 276} 0} {32 {274 275 276} 0} {33 {274 275 276} 0} {34 {274 275 276} 0}}
  38 {{26 270 1}}
  39 {{27 270 1} {28 270 1}}
  40 {{29 270 1}}
  41 {{22 270 1}}
  42 {{19 264 2}}
  43 {{9 262 3}}
  44 {{16 {266 267 268} 2}}
  45 {{19 268 1} {20 268 1} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0} {28 270 0} {29 270 0}}
  46 {{21 268 1}}
  47 {{18 268 1}}
  48 {{15 {266 267 268} 2}}
  49 {{10 262 3}}
  50 {{13 {266 267 268} 2}}
  27,trans {{266 49} {267 25} {268 26} {293 50}}
  51 {{10 258 3}}
  46,trans {}
  52 {{23 270 2}}
  65,trans {}
  53 {{25 270 2}}
  84,trans {}
  54 {{32 {274 275 276} 1} {33 {274 275 276} 1} {35 {269 270 284} 0} {36 {269 270 284} 0} {37 {269 270 284} 0}}
  55 {{34 {274 275 276} 1}}
  56 {{24 270 2} {30 {274 275 276} 1} {32 {274 275 276} 0} {33 {274 275 276} 0} {34 {274 275 276} 0}}
  57 {{31 {274 275 276} 1}}
  58 {{27 270 2} {28 270 2} {38 {269 270 282 284} 0} {39 {269 270 282 284} 0} {18 {269 270 282 284} 0} {19 {269 270 282 284} 0} {20 {269 270 282 284} 0} {21 {269 270 282 284} 0}}
  59 {{29 270 2}}
  60 {{19 264 3}}
  61 {{20 268 2}}
  62 {{19 268 2}}
  63 {{15 {266 267 268} 3}}
  64 {{23 270 3}}
  65 {{33 {274 275 276} 2}}
  26,trans {}
  66 {{35 {269 270 284} 1} {36 {269 270 284} 1}}
  45,trans {{270 61} {271 36} {273 37} {274 38} {279 39} {282 40} {284 41} {295 62}}
  67 {{37 {269 270 284} 1}}
  68 {{32 {274 275 276} 2} {18 276 0} {19 276 0} {20 276 0} {21 276 0}}
  64,trans {}
  69 {{24 270 3}}
  70 {{30 {274 275 276} 2}}
  83,trans {{276 92}}
  71 {{19 {269 270 282 284} 1} {20 {269 270 282 284} 1} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0} {28 270 0} {29 270 0}}
  72 {{21 {269 270 282 284} 1}}
  73 {{28 270 3}}
  74 {{18 {269 270 282 284} 1}}
  75 {{39 {269 270 282 284} 1}}
  76 {{27 270 3} {38 {269 270 282 284} 1} {18 {269 270 282 284} 0} {19 {269 270 282 284} 0} {20 {269 270 282 284} 0} {21 {269 270 282 284} 0}}
  77 {{19 268 3}}
  78 {{36 {269 270 284} 2}}
  79 {{35 {269 270 284} 2}}
  80 {{19 276 1} {20 276 1} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0} {28 270 0} {29 270 0}}
  81 {{21 276 1}}
  82 {{18 276 1}}
  25,trans {{268 44} {269 45} {270 46} {284 47} {294 48}}
  83 {{32 {274 275 276} 3}}
  44,trans {}
  84 {{20 {269 270 282 284} 2}}
  63,trans {}
  85 {{19 {269 270 282 284} 2}}
  86 {{28 270 4}}
  82,trans {}
  87 {{27 270 4}}
  0 {{0 0 0} {1 0 0}}
  88 {{38 {269 270 282 284} 2}}
  1 {{1 0 1} {2 0 0} {3 0 0} {4 0 0} {5 0 0} {7 0 0} {8 0 0}}
  89 {{35 {269 270 284} 3}}
  90 {{20 276 2}}
  2 {{0 0 1}}
  91 {{19 276 2}}
  3 {{4 0 1} {5 0 1} {6 {258 265 266} 0}}
  92 {{32 {274 275 276} 4}}
  4 {{7 0 1} {8 0 1} {10 262 0} {11 262 0} {12 262 0} {9 262 0}}
  93 {{19 {269 270 282 284} 3}}
  5 {{1 0 2}}
  94 {{27 270 5}}
  6 {{2 0 1}}
  95 {{19 276 3}}
  7 {{3 0 1}}
  8 {{6 {258 265 266} 1}}
  9 {{4 0 2} {5 0 2} {10 258 0} {11 258 0} {12 258 0}}
  24,trans {}
  43,trans {}
  62,trans {{270 77}}
  81,trans {}
  23,trans {{264 43}}
  42,trans {{270 60}}
  61,trans {}
  79,trans {{278 89}}
  80,trans {{270 90} {271 36} {273 37} {274 38} {279 39} {282 40} {284 41} {295 91}}
  9,trans {{258 16} {265 17} {266 18} {291 19}}
  22,trans {}
  41,trans {}
  59,trans {}
  60,trans {}
  78,trans {}
  8,trans {{284 15}}
  21,trans {}
  39,trans {{281 58}}
  40,trans {{280 59}}
  58,trans {{269 71} {270 72} {282 73} {284 74} {294 75} {299 76}}
  77,trans {}
  7,trans {}
  19,trans {{258 34}}
  20,trans {{270 35} {271 36} {273 37} {274 38} {279 39} {282 40} {284 41} {295 42}}
  38,trans {}
  57,trans {}
  76,trans {{269 71} {270 72} {282 87} {284 74} {294 88}}
  6,trans {}
  95,trans {}
  18,trans {}
  37,trans {{274 53} {275 54} {276 55} {296 56} {297 57}}
  56,trans {{274 69} {275 54} {276 55} {297 70}}
  75,trans {}
  5,trans {}
  94,trans {}
  17,trans {{266 32} {267 25} {268 26} {292 33} {293 28}}
  36,trans {{284 52}}
  55,trans {}
  74,trans {}
  4,trans {{263 10} {265 11} {266 12} {290 13} {291 14}}
  93,trans {}
  16,trans {}
  35,trans {}
  54,trans {{276 65} {277 66} {278 67} {298 68}}
  73,trans {{280 86}}
  3,trans {{259 8} {288 9}}
  92,trans {}
  15,trans {{260 31}}
  34,trans {}
  53,trans {}
  72,trans {}
  2,trans {}
  91,trans {{270 95}}
  14,trans {{262 30}}
  33,trans {{266 51} {267 25} {268 26} {293 50}}
  52,trans {{272 64}}
  71,trans {{270 84} {271 36} {273 37} {274 38} {279 39} {282 40} {284 41} {295 85}}
  1,trans {{257 3} {261 4} {286 5} {287 6} {289 7}}
  89,trans {}
  90,trans {}
  13,trans {{262 29}}
  32,trans {}
  51,trans {}
  69,trans {}
  70,trans {}
  0,trans {{283 1} {285 2}}
  88,trans {}
  12,trans {}
  31,trans {}
  49,trans {}
  50,trans {}
  68,trans {{269 80} {270 81} {284 82} {294 83}}
  87,trans {{280 94}}
  10 {{9 262 1} {18 264 0} {19 264 0} {20 264 0} {21 264 0}}
  11 {{10 262 1} {11 262 1} {13 {266 267 268} 0} {14 {266 267 268} 0} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  12 {{12 262 1}}
  13 {{8 0 2}}
  14 {{7 0 2}}
  11,trans {{266 24} {267 25} {268 26} {292 27} {293 28}}
  15 {{6 {258 265 266} 2}}
  16 {{5 0 3}}
  29,trans {}
  30,trans {}
  17 {{10 258 1} {11 258 1} {13 {266 267 268} 0} {14 {266 267 268} 0} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  48,trans {{268 63}}
  18 {{12 258 1}}
  67,trans {}
  20 {{19 264 1} {20 264 1} {22 270 0} {23 270 0} {24 270 0} {25 270 0} {26 270 0} {27 270 0} {28 270 0} {29 270 0}}
  19 {{4 0 3}}
  86,trans {}
  21 {{21 264 1}}
  22 {{18 264 1}}
  23 {{9 262 2}}
  24 {{11 262 2}}
  25 {{15 {266 267 268} 1} {16 {266 267 268} 1} {18 268 0} {19 268 0} {20 268 0} {21 268 0}}
  26 {{17 {266 267 268} 1}}
  27 {{10 262 2} {13 {266 267 268} 1} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  28 {{14 {266 267 268} 1}}
  30 {{7 0 3}}
  29 {{8 0 3}}
  31 {{6 {258 265 266} 3}}
  10,trans {{269 20} {270 21} {284 22} {294 23}}
  32 {{11 258 2}}
  33 {{10 258 2} {13 {266 267 268} 1} {15 {266 267 268} 0} {16 {266 267 268} 0} {17 {266 267 268} 0}}
  28,trans {}
  34 {{4 0 4}}
  47,trans {}
}

array set xmlrpc::token_id_table {
  286,t 1
  286 method
  280,title _ARRAY
  279,title ARRAY
  264,line 18
  298,title {}
  292,line 78
  287 methodCall
  270,t 0
  269,t 0
  288 methodName
  300 start'
  290 fault
  289 methodResponse
  276,line 36
  265,title PARAMS
  291,t 1
  291 params
  284,title string
  292 xparam
  274,t 0
  261,line 14
  293 param
  288,line 63
  257,t 0
  294 value
  270,title _VALUE
  269,title VALUE
  295,t 1
  295 type
  288,title {}
  273,line 32
  296 members
  278,t 0
  297 member
  257,line 8
  262,t 0
  298 name
  285,line 52
  274,title _STRUCT
  299,t 1
  299 values
  293,title {}
  283,t 0
  270,line 27
  269,line 26
  297,line 110
  259,title METHODNAME
  260,title _METHODNAME
  266,t 0
  278,title _NAME
  297,title {}
  282,line 45
  287,t 1
  error error
  271,t 0
  264,title _FAULT
  266,line 21
  294,line 87
  283,title string
  292,t 1
  278,line 39
  error,line 51
  275,t 0
  268,title _PARAM
  287,title {}
  258,t 0
  263,line 17
  291,line 73
  error,title {}
  296,t 1
  280,t 0
  279,t 0
  275,line 35
  273,title STRUCT
  292,title {}
  263,t 0
  259,line 11
  260,line 12
  287,line 59
  258,title _METHODCALL
  284,t 0
  277,title NAME
  296,title {}
  272,line 30
  267,t 0
  299,line 120
  263,title FAULT
  288,t 1
  284,line 48
  282,title _DATA
  272,t 0
  268,line 24
  296,line 106
  267,title PARAM
  293,t 1
  286,title {}
  257 METHODCALL_
  281,line 44
  276,t 0
  258 _METHODCALL_
  259,t 0
  259 METHODNAME_
  260 _METHODNAME_
  260,t 0
  272,title _INTEGER
  261 METHODRESPONSE_
  265,line 20
  297,t 1
  293,line 82
  291,title {}
  262 _METHODRESPONSE_
  281,t 0
  263 FAULT_
  277,line 38
  257,title METHODCALL
  264 _FAULT_
  264,t 0
  276,title _MEMBER
  265 PARAMS_
  295,title {}
  262,line 15
  266 _PARAMS_
  300,line 123
  290,line 70
  289,line 66
  285,t 1
  267 PARAM_
  0,t 0
  0 {$}
  262,title _METHODRESPONSE
  268 _PARAM_
  268,t 0
  281,title DATA
  274,line 33
  270 _VALUE_
  269 VALUE_
  299,title {}
  error,t 0
  271 INTEGER_
  300,t 1
  290,t 1
  289,t 1
  272 _INTEGER_
  258,line 9
  286,line 55
  273,t 0
  273 STRUCT_
  266,title _PARAMS
  285,title {}
  274 _STRUCT_
  275 MEMBER_
  271,line 29
  298,line 115
  294,t 1
  276 _MEMBER_
  277,t 0
  277 NAME_
  271,title INTEGER
  300,title {}
  290,title {}
  289,title {}
  283,line 47
  278 _NAME_
  261,t 0
  280 _ARRAY_
  279 ARRAY_
  298,t 1
  281 DATA_
  267,line 23
  295,line 93
  282,t 0
  282 _DATA_
  275,title MEMBER
  294,title {}
  283 HEADER_
  265,t 0
  284 STRING_
  280,line 42
  279,line 41
  285 command
  261,title METHODRESPONSE
}

proc xmlrpc::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { global parse; set parse(result) $2 }
                    2 { set _ $1 }
                    3 { set _ $1 }
                    4 { set _ [list methodcall [list $2 $3]] }
                    5 { set _ [list methodcall [list $2]] }
                    6 { set _ [list methodname $2] }
                    7 { set _ [list methodresponse $2] }
                    8 { set _ [list methodresponse $2] }
                    9 { set _ [list fault $2] }
                    10 { set _ [list params $2] }
                    11 { set _ [list params {}] }
                    12 { set _ [list params {}] }
                    13 { lappend _ $2 }
                    14 { set _ [list $1] }
                    15 { set _ [list param $2] }
                    16 { set _ [list param {}] }
                    17 { set _ [list param {}] }
                    18 { set _ [list value [list string [XMLUnQuote $1]]] }
                    19 { set _ [list value $2] }
                    20 { set _ [list value {}] }
                    21 { set _ [list value {}] }
                    22 { set _ [list string [XMLUnQuote $1]] }
                    23 { set _ [list integer $2] }
                    24 { set _ [list struct $2] }
                    25 { set _ [list struct {}] }
                    26 { set _ [list struct {}] }
                    27 { set _ [list array [list data $3]] }
                    28 { set _ [list array [list data {}]] }
                    29 { set _ [list array [list data {}]] }
                    30 { lappend _ $2 }
                    31 { set _ [list $1] }
                    32 { set _ [list member [list $2 $3]] }
                    33 { set _ [list member {}] }
                    34 { set _ [list member {}] }
                    35 { set _ [list name $2] }
                    36 { set _ [list name {}] }
                    37 { set _ [list name {}] }
                    38 { lappend _ $2 }
                    39 { set _ [list $1] }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc xmlrpc::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
