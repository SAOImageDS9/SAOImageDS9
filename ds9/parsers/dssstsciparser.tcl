package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval dssstsci {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc dssstsci::YYABORT {} {
    return -code return 1
}

proc dssstsci::YYACCEPT {} {
    return -code return 0
}

proc dssstsci::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc dssstsci::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc dssstsci::yyerror {s} {
    puts stderr $s
}

proc dssstsci::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc dssstsci::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set dssstsci::table {
  10:280,target 45
  9:284 shift
  16:283,target 22
  62:283,target 13
  30:283 reduce
  29:283 reduce
  9:285 shift
  27:0 reduce
  9:286 shift
  9:292,target 43
  9:287 shift
  9:288 shift
  48:0 reduce
  9:289 shift
  9:290 shift
  3:267,target 19
  9:291 shift
  51:283,target 11
  9:292 shift
  48:295,target 56
  7:283,target 1
  38:283 reduce
  9:304 goto
  50:278,target 60
  0:275,target 9
  11:282,target 19
  40:283,target 46
  39:283,target 45
  6:266 shift
  7:262,target 32
  56:0,target 38
  6:268 shift
  24:0 reduce
  48:0,target 10
  9:289,target 40
  9:290,target 41
  47:283 shift
  41:0,target 47
  45:0 reduce
  33:0,target 31
  2:282,target 12
  28:283,target 5
  17:280 shift
  25:0,target 39
  34:282,target 12
  50:276,target 58
  49:276,target 53
  0:273,target 7
  56:283 reduce
  7:259,target 29
  7:260,target 30
  21:0 reduce
  26:283 reduce
  9:287,target 38
  45:279,target 51
  42:0 reduce
  52:283,target 36
  2:280,target 17
  0:302,target 16
  12:282,target 20
  6:303 goto
  41:283,target 47
  35:283 reduce
  0:271,target 5
  11:277,target 19
  7:257,target 27
  3:267 shift
  38:0 reduce
  30:283,target 6
  29:283,target 3
  9:285,target 36
  3:270 shift
  44:283 reduce
  60:0 reduce
  59:0 reduce
  0:300,target 15
  8:281,target 11
  6:303,target 26
  14:281 shift
  14:282 shift
  61:0,target 30
  53:0,target 9
  0:268,target 3
  45:0,target 10
  53:283 reduce
  37:0,target 43
  30:0,target 6
  29:0,target 3
  8:299,target 34
  22:0,target 28
  53:283,target 9
  35:0 reduce
  4:263,target 22
  23:283 reduce
  56:0 reduce
  62:283 reduce
  42:283,target 48
  12:277,target 20
  18:281,target 11
  14:299 goto
  32:283 reduce
  11:0 reduce
  31:283,target 4
  0:264 shift
  32:0 reduce
  3:297 goto
  0:265 shift
  53:0 reduce
  0:268 shift
  7:293,target 33
  18:299,target 49
  0:269 shift
  11:276 reduce
  41:283 reduce
  0:271 shift
  11:277 reduce
  19:283,target 15
  20:283,target 14
  0:272 shift
  11:278 reduce
  50:276 shift
  49:276 shift
  0:273 shift
  50:277 shift
  0:274 shift
  11:281 reduce
  50:278 shift
  0:275 shift
  11:282 reduce
  16:301,target 47
  0:264,target 1
  54:283,target 35
  50:283 reduce
  49:283 reduce
  28:0 reduce
  0:280 shift
  7:0,target 1
  0:281 shift
  0:0,target 24
  0:282 shift
  14:282,target 12
  50:0 reduce
  49:0 reduce
  0:283 shift
  57:0,target 37
  43:283,target 49
  19:283 reduce
  20:283 reduce
  50:0,target 12
  49:0,target 8
  0:283,target 13
  42:0,target 48
  58:283 reduce
  26:0,target 34
  0:300 goto
  8:281 shift
  49:294 goto
  46:294,target 54
  8:282 shift
  32:283,target 7
  0:302 goto
  11:0,target 19
  50:296 goto
  28:283 reduce
  25:0 reduce
  50:298 goto
  46:0 reduce
  21:283,target 32
  0:299 goto
  0:281,target 11
  37:283 reduce
  0:0 reduce
  48:279,target 51
  46:276 shift
  8:299 goto
  22:0 reduce
  46:283 reduce
  43:0 reduce
  0:299,target 14
  44:283,target 33
  1:283,target 26
  16:283 reduce
  33:283,target 31
  46:294 goto
  5:283 reduce
  62:0,target 13
  16:301 goto
  54:0,target 35
  40:0 reduce
  39:0 reduce
  22:283,target 28
  25:283 reduce
  46:0,target 8
  38:0,target 44
  61:0 reduce
  31:0,target 4
  23:0,target 29
  15:0,target 0
  34:281 shift
  56:283,target 38
  34:282 shift
  15:0 accept
  9:291,target 42
  45:283,target 10
  36:0 reduce
  50:298,target 62
  57:0 reduce
  43:283 reduce
  50:277,target 59
  0:274,target 8
  11:281,target 19
  13:283 reduce
  34:299 goto
  7:261,target 31
  12:0 reduce
  52:283 reduce
  2:280 shift
  2:281 shift
  23:283,target 29
  33:0 reduce
  2:282 shift
  9:288,target 39
  2:281,target 11
  54:0 reduce
  50:296,target 61
  22:283 reduce
  61:283 reduce
  57:283,target 37
  1:0,target 26
  34:281,target 11
  0:272,target 6
  11:278,target 19
  7:0 reduce
  58:0,target 16
  51:0,target 11
  31:283 reduce
  2:299,target 18
  7:258,target 28
  46:283,target 8
  43:0,target 49
  35:0,target 41
  30:0 reduce
  29:0 reduce
  27:0,target 2
  9:286,target 37
  7:257 shift
  19:0,target 15
  20:0,target 14
  51:0 reduce
  34:299,target 50
  2:299 goto
  7:258 shift
  12:0,target 20
  49:294,target 57
  7:259 shift
  7:260 shift
  8:282,target 12
  35:283,target 41
  7:261 shift
  40:283 reduce
  39:283 reduce
  7:262 shift
  12:281,target 20
  10:280 shift
  0:269,target 4
  11:276,target 19
  17:280,target 48
  48:279 shift
  24:283,target 40
  26:0 reduce
  48:283 reduce
  9:284,target 35
  13:283,target 27
  18:281 shift
  58:283,target 16
  18:282 shift
  12:278,target 20
  18:282,target 12
  57:283 reduce
  1:0 reduce
  47:283,target 55
  48:295 goto
  45:295,target 52
  4:283,target 23
  7:283 reduce
  23:0 reduce
  27:283 reduce
  44:0 reduce
  5:0,target 25
  36:283,target 42
  55:0,target 23
  7:293 goto
  12:276,target 20
  18:299 goto
  36:283 reduce
  40:0,target 46
  39:0,target 45
  4:263 shift
  25:283,target 39
  32:0,target 7
  0:265,target 2
  3:297,target 21
  6:268,target 25
  24:0,target 40
  16:0,target 21
  19:0 reduce
  20:0 reduce
  45:279 shift
  46:276,target 53
  41:0 reduce
  60:283,target 18
  59:283,target 17
  45:283 reduce
  62:0 reduce
  48:283,target 10
  5:283,target 25
  54:283 reduce
  6:266,target 24
  16:0 reduce
  45:295 goto
  4:283 shift
  37:283,target 43
  37:0 reduce
  14:281,target 11
  24:283 reduce
  58:0 reduce
  0:282,target 12
  26:283,target 34
  33:283 reduce
  13:0 reduce
  14:299,target 46
  61:283,target 30
  60:0,target 18
  59:0,target 17
  55:0 reduce
  52:0,target 36
  12:276 reduce
  44:0,target 33
  42:283 reduce
  12:277 reduce
  36:0,target 42
  12:278 reduce
  50:283,target 12
  49:283,target 8
  28:0,target 5
  0:280,target 10
  12:281 reduce
  21:0,target 32
  12:282 reduce
  13:0,target 27
  51:283 reduce
  38:283,target 44
  9:304,target 44
  31:0 reduce
  1:283 reduce
  52:0 reduce
  3:270,target 20
  21:283 reduce
  27:283,target 2
  60:283 reduce
  59:283 reduce
  5:0 reduce
}

array set dssstsci::rules {
  9,l 294
  11,l 295
  32,l 302
  6,l 293
  28,l 302
  49,l 304
  3,l 293
  25,l 302
  46,l 304
  0,l 305
  22,l 301
  43,l 304
  18,l 298
  40,l 303
  39,l 303
  15,l 297
  36,l 302
  12,l 296
  33,l 302
  7,l 293
  29,l 302
  30,l 302
  4,l 293
  26,l 302
  47,l 304
  1,l 293
  23,l 300
  44,l 304
  19,l 299
  20,l 299
  41,l 304
  16,l 298
  37,l 302
  13,l 296
  34,l 302
  8,l 294
  10,l 295
  31,l 302
  5,l 293
  27,l 302
  48,l 304
  2,l 293
  24,l 302
  45,l 304
  21,l 300
  42,l 304
  17,l 298
  38,l 302
  14,l 297
  35,l 302
}

array set dssstsci::rules {
  12,dc 0
  26,dc 1
  3,dc 1
  41,dc 1
  18,dc 1
  33,dc 2
  9,dc 1
  47,dc 1
  11,dc 1
  25,dc 1
  2,dc 1
  40,dc 1
  39,dc 1
  17,dc 1
  32,dc 2
  8,dc 0
  46,dc 1
  10,dc 0
  24,dc 0
  1,dc 0
  38,dc 4
  16,dc 1
  31,dc 2
  7,dc 1
  45,dc 1
  23,dc 3
  0,dc 1
  37,dc 4
  15,dc 1
  29,dc 2
  30,dc 4
  6,dc 1
  44,dc 1
  22,dc 0
  36,dc 3
  14,dc 1
  28,dc 2
  5,dc 1
  43,dc 1
  21,dc 1
  35,dc 3
  49,dc 1
  13,dc 1
  27,dc 1
  4,dc 1
  42,dc 1
  19,dc 1
  20,dc 1
  34,dc 2
  48,dc 1
}

array set dssstsci::rules {
  41,line 157
  7,line 98
  37,line 149
  4,line 95
  34,line 145
  1,line 92
  31,line 141
  27,line 136
  24,line 133
  21,line 129
  17,line 122
  22,e 1
  14,line 117
  11,line 110
  49,line 165
  46,line 162
  43,line 159
  9,line 106
  40,line 154
  39,line 153
  6,line 97
  36,line 148
  3,line 94
  33,line 143
  29,line 138
  30,line 140
  26,line 135
  23,line 130
  19,line 125
  20,line 126
  16,line 121
  13,line 114
  10,line 109
  48,line 164
  45,line 161
  42,line 158
  8,line 105
  38,line 150
  5,line 96
  35,line 146
  2,line 93
  32,line 142
  28,line 137
  25,line 134
  22,line 129
  18,line 123
  15,line 118
  12,line 113
  47,line 163
  44,line 160
}

array set dssstsci::lr1_table {
  66,trans {}
  35 {{41 {0 283} 1}}
  14,trans {{281 46} {282 47} {299 48}}
  36 {{42 {0 283} 1}}
  33,trans {}
  37 {{43 {0 283} 1}}
  52,trans {}
  38 {{44 {0 283} 1}}
  40 {{46 {0 283} 1}}
  39 {{45 {0 283} 1}}
  18,trans {{281 46} {282 47} {299 51}}
  41 {{47 {0 283} 1}}
  1,trans {}
  37,trans {}
  42 {{48 {0 283} 1}}
  56,trans {}
  43 {{49 {0 283} 1}}
  44 {{33 {0 283} 2}}
  23,trans {}
  45 {{36 {0 283} 2} {10 {0 283} 0} {11 {0 283} 0}}
  5,trans {}
  42,trans {}
  46 {{19 {0 276} 1}}
  61,trans {}
  47 {{20 {0 276} 1}}
  48 {{35 {0 283} 2} {8 {0 283} 0} {9 {0 283} 0}}
  27,trans {}
  50 {{38 {0 283} 3} {10 {0 283} 0} {11 {0 283} 0}}
  49 {{23 0 2}}
  9,trans {{284 35} {285 36} {286 37} {287 38} {288 39} {289 40} {290 41} {291 42} {292 43} {304 44}}
  46,trans {}
  51 {{37 {0 283} 3} {8 {0 283} 0} {9 {0 283} 0}}
  65,trans {}
  52 {{19 {0 276 277 278} 1}}
  53 {{20 {0 276 277 278} 1}}
  13,trans {}
  54 {{30 {0 283} 3} {12 {0 283} 0} {13 {0 283} 0} {16 {0 283} 0} {17 {0 283} 0} {18 {0 283} 0}}
  32,trans {}
  51,trans {{276 57} {294 61}}
  55 {{11 {0 283} 1}}
  56 {{36 {0 283} 3}}
  57 {{9 {0 283} 1}}
  17,trans {{280 50}}
  0,trans {{264 1} {265 2} {268 3} {269 4} {271 5} {272 6} {273 7} {274 8} {275 9} {280 10} {281 11} {282 12} {283 13} {299 14} {300 15} {302 16}}
  58 {{35 {0 283} 3}}
  36,trans {}
  55,trans {}
  60 {{38 {0 283} 4}}
  59 {{23 0 3}}
  61 {{37 {0 283} 4}}
  62 {{16 {0 283} 1}}
  22,trans {}
  4,trans {{263 22} {283 23}}
  63 {{17 {0 283} 1}}
  41,trans {}
  60,trans {}
  59,trans {}
  64 {{18 {0 283} 1}}
  65 {{30 {0 283} 4}}
  66 {{13 {0 283} 1}}
  26,trans {}
  8,trans {{281 11} {282 12} {299 34}}
  45,trans {{279 55} {295 56}}
  64,trans {}
  12,trans {}
  31,trans {}
  50,trans {{279 55} {295 60}}
  49,trans {{283 59}}
  16,trans {{301 49}}
  35,trans {}
  54,trans {{276 62} {277 63} {278 64} {296 65} {298 66}}
  21,trans {}
  3,trans {{267 19} {270 20} {297 21}}
  40,trans {}
  39,trans {}
  58,trans {}
  10 {{36 {0 283} 1}}
  11 {{19 {281 282} 1}}
  25,trans {}
  12 {{20 {281 282} 1}}
  7,trans {{257 27} {258 28} {259 29} {260 30} {261 31} {262 32} {293 33}}
  44,trans {}
  13 {{27 {0 283} 1}}
  63,trans {}
  14 {{35 {0 283} 1} {19 {0 276} 0} {20 {0 276} 0}}
  11,trans {}
  15 {{0 0 1}}
  30,trans {}
  29,trans {}
  16 {{21 0 1} {23 0 1} {22 283 0}}
  48,trans {{276 57} {294 58}}
  0 {{0 0 0} {21 0 0} {23 0 0} {24 {0 283} 0} {25 {0 283} 0} {26 {0 283} 0} {27 {0 283} 0} {28 {0 283} 0} {29 {0 283} 0} {30 {0 283} 0} {31 {0 283} 0} {32 {0 283} 0} {33 {0 283} 0} {34 {0 283} 0} {35 {0 283} 0} {36 {0 283} 0} {37 {0 283} 0} {38 {0 283} 0} {19 {281 282} 0} {20 {281 282} 0}}
  17 {{38 {0 283} 2}}
  1 {{26 {0 283} 1}}
  18 {{37 {0 283} 2} {19 {0 276} 0} {20 {0 276} 0}}
  15,trans {}
  2 {{37 {0 283} 1} {38 {0 283} 1} {19 {281 282} 0} {20 {281 282} 0}}
  19 {{15 {0 283} 1}}
  20 {{14 {0 283} 1}}
  34,trans {{281 52} {282 53} {299 54}}
  3 {{32 {0 283} 1} {14 {0 283} 0} {15 {0 283} 0}}
  21 {{32 {0 283} 2}}
  53,trans {}
  4 {{28 {0 283} 1} {29 {0 283} 1}}
  22 {{28 {0 283} 2}}
  5 {{25 {0 283} 1}}
  23 {{29 {0 283} 2}}
  20,trans {}
  19,trans {}
  6 {{34 {0 283} 1} {39 {0 283} 0} {40 {0 283} 0}}
  2,trans {{280 17} {281 11} {282 12} {299 18}}
  24 {{40 {0 283} 1}}
  38,trans {}
  7 {{31 {0 283} 1} {1 {0 283} 0} {2 {0 283} 0} {3 {0 283} 0} {4 {0 283} 0} {5 {0 283} 0} {6 {0 283} 0} {7 {0 283} 0}}
  25 {{39 {0 283} 1}}
  57,trans {}
  8 {{30 {0 283} 1} {19 {281 282} 0} {20 {281 282} 0}}
  26 {{34 {0 283} 2}}
  9 {{33 {0 283} 1} {41 {0 283} 0} {42 {0 283} 0} {43 {0 283} 0} {44 {0 283} 0} {45 {0 283} 0} {46 {0 283} 0} {47 {0 283} 0} {48 {0 283} 0} {49 {0 283} 0}}
  27 {{2 {0 283} 1}}
  24,trans {}
  6,trans {{266 24} {268 25} {303 26}}
  28 {{5 {0 283} 1}}
  43,trans {}
  29 {{3 {0 283} 1}}
  30 {{6 {0 283} 1}}
  62,trans {}
  31 {{4 {0 283} 1}}
  10,trans {{280 45}}
  32 {{7 {0 283} 1}}
  28,trans {}
  33 {{31 {0 283} 2}}
  47,trans {}
  34 {{30 {0 283} 2} {19 {0 276 277 278} 0} {20 {0 276 277 278} 0}}
}

array set dssstsci::token_id_table {
  286 POSS2UKSTU_BLUE_
  286,t 0
  287 POSS1_BLUE_
  292,line 51
  302,line 132
  288 POSS1_RED_
  265,title COORD
  289 ALL_
  290 QUICKV_
  300 command
  284,title POSS2UKSTU_RED
  291 PHASE2_GSC2_
  301 @PSEUDO1
  292 PHASE2_GSC1_
  302 dssstsci
  288,line 47
  293 yesno
  303 update
  304 survey
  294 deg
  305 start'
  295 sex
  296 sizeOpt
  262,t 0
  297 frame
  285,line 44
  298 rformat
  299 numeric
  283,t 0
  282,line 37
  264,title CLOSE
  283,title string
  278,line 30
  error,line 90
  258,t 0
  275,line 26
  279,t 0
  280,t 0
  272,line 23
  263,title CLEAR
  282,title float
  268,line 19
  276,t 0
  265,line 16
  297,t 1
  262,line 12
  262,title FALSE
  0 {$}
  0,t 0
  281,title integer
  error,t 0
  299,title {}
  258,line 8
  273,t 0
  304,t 1
  294,t 1
  261,title TRUE
  279,title SEXAGESIMAL
  280,title SEXSTR
  269,t 0
  270,t 0
  298,title {}
  291,t 0
  301,t 1
  266,t 0
  260,title OFF
  259,title ON
  297,line 116
  278,title ARCSEC
  297,title {}
  287,t 0
  304,line 156
  294,line 104
  291,line 50
  error,title {}
  301,line 129
  263,t 0
  258,title NO
  287,line 46
  277,title ARCMIN
  284,t 0
  296,title {}
  284,line 43
  281,line 36
  260,t 0
  259,t 0
  281,t 0
  257,title YES
  277,line 29
  276,title DEGREES
  305,title {}
  295,title {}
  274,line 25
  271,line 22
  277,t 0
  267,line 18
  298,t 1
  275,title SURVEY
  304,title {}
  294,title {}
  264,line 15
  261,line 11
  274,t 0
  305,t 1
  295,t 1
  257,line 7
  274,title SIZE
  293,title {}
  303,title {}
  271,t 0
  error error
  292,t 0
  302,t 1
  273,title SAVE
  292,title PHASE2_GSC1
  302,title {}
  267,t 0
  299,line 124
  288,t 0
  296,line 112
  272,title UPDATE
  303,line 152
  291,title PHASE2_GSC2
  293,line 91
  301,title {}
  264,t 0
  285,t 0
  289,line 48
  290,line 49
  300,line 128
  286,line 45
  271,title OPEN
  261,t 0
  283,line 39
  289,title ALL
  290,title QUICKV
  300,title {}
  282,t 0
  279,line 32
  280,line 34
  276,line 28
  257,t 0
  269,title NAME
  270,title NEW
  273,line 24
  288,title POSS1_RED
  278,t 0
  299,t 1
  269,line 20
  270,line 21
  266,line 17
  268,title FRAME
  275,t 0
  263,line 14
  287,title POSS1_BLUE
  296,t 1
  260,line 10
  259,line 9
  272,t 0
  267,title CURRENT
  303,t 1
  257 YES_
  286,title POSS2UKSTU_BLUE
  293,t 1
  258 NO_
  260 OFF_
  259 ON_
  261 TRUE_
  262 FALSE_
  263 CLEAR_
  264 CLOSE_
  265 COORD_
  266 CROSSHAIR_
  267 CURRENT_
  268,t 0
  268 FRAME_
  269 NAME_
  270 NEW_
  271 OPEN_
  272 UPDATE_
  289,t 0
  290,t 0
  300,t 1
  266,title CROSSHAIR
  273 SAVE_
  274 SIZE_
  285,title POSS2UKSTU_IR
  275 SURVEY_
  276 DEGREES_
  298,line 120
  277 ARCMIN_
  278 ARCSEC_
  279 SEXAGESIMAL_
  280 SEXSTR_
  281 INT_
  305,line 166
  282 REAL_
  295,line 108
  265,t 0
  283 STRING_
  284 POSS2UKSTU_RED_
  285 POSS2UKSTU_IR_
}

proc dssstsci::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { set _ 1 }
                    2 { set _ 1 }
                    3 { set _ 1 }
                    4 { set _ 1 }
                    5 { set _ 0 }
                    6 { set _ 0 }
                    7 { set _ 0 }
                    8 { set _ degrees }
                    9 { set _ degrees }
                    10 { set _ sexagesimal }
                    11 { set _ sexagesimal }
                    12 { set _ degrees }
                    13 { set _ $1 }
                    14 { set _ new }
                    15 { set _ current }
                    16 { set _ degrees }
                    17 { set _ arcmin }
                    18 { set _ arcsec }
                    19 { set _ $1 }
                    20 { set _ $1 }
                    22 { global ds9; if {!$ds9(init)} {YYERROR} else {yyclearin; YYACCEPT} }
                    24 { IMGSVRApply dstsci 1 }
                    26 { ARDestroy dstsci }
                    27 { ProcessCmdSet dstsci name $1 "IMGSVRApply dstsci 1" }
                    28 { ProcessCmdSet dstsci name {} }
                    29 { ProcessCmdSet dstsci name $2 "IMGSVRApply dstsci 1" }
                    30 { ProcessCmdSet4 dstsci width $2 height $3 rformat $4 rformat,msg $4 }
                    31 { ProcessCmdSet dstsci save $2 }
                    32 { ProcessCmdSet dstsci mode $2 }
                    33 { ProcessCmdSet dstsci survey $2 }
                    35 { ProcessCmdSet4 dstsci x $1 y $2 skyformat $3 skyformat,msg $3 "IMGSVRApply dstsci 1" }
                    36 { ProcessCmdSet4 dstsci x $1 y $2 skyformat $3 skyformat,msg $3 "IMGSVRApply dstsci 1" }
                    37 { ProcessCmdSet4 dstsci x $2 y $3 skyformat $4 skyformat,msg $4 "IMGSVRApply dstsci 1" }
                    38 { ProcessCmdSet4 dstsci x $2 y $3 skyformat $4 skyformat,msg $4 "IMGSVRApply dstsci 1" }
                    39 { IMGSVRUpdate dstsci; IMGSVRApply dstsci 1 }
                    40 { IMGSVRCrosshair dstsci; IMGSVRApply dstsci 1 }
                    41 { set _ poss2ukstu_red }
                    42 { set _ poss2ukstu_ir }
                    43 { set _ poss2ukstu_blue }
                    44 { set _ poss1_blue }
                    45 { set _ poss1_red }
                    46 { set _ all }
                    47 { set _ quickv }
                    48 { set _ phase2_gsc2 }
                    49 { set _ phase2_gsc1 }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc dssstsci::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_
     
     ParserError $msg $yycnt $yy_current_buffer $index_
}
