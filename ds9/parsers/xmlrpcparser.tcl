package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval xmlrpc {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc xmlrpc::YYABORT {} {
    return -code return 1
}

proc xmlrpc::YYACCEPT {} {
    return -code return 0
}

proc xmlrpc::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc xmlrpc::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc xmlrpc::yyerror {s} {
    puts stderr $s
}

proc xmlrpc::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc xmlrpc::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set xmlrpc::table {
  70:291,target 84
  18:271,target 30
  31:304,target 56
  29:282 shift
  62:283,target 41
  29:283 shift
  1:297 goto
  0:296,target 2
  1:298 goto
  53:271,target 25
  1:299 goto
  60:274,target 58
  59:274,target 52
  7:283,target 23
  38:283 reduce
  68:289 shift
  6:0,target 12
  2:0 accept
  77:283 reduce
  29:305 goto
  56:270 reduce
  56:269 reduce
  39:283,target 28
  22:311,target 49
  60:313 goto
  56:271 reduce
  37:305,target 63
  1:298,target 10
  47:283 reduce
  24:267,target 50
  26:268 reduce
  22:279,target 38
  26:269 reduce
  31:271,target 30
  33:0,target 10
  86:282 reduce
  0:294,target 1
  86:283 reduce
  74:259 shift
  17:0,target 11
  10:0,target 4
  80:282,target 56
  63:283,target 57
  21:0 reduce
  35:273 shift
  23:282,target 29
  35:274 shift
  14:259 shift
  54:271,target 72
  35:275 shift
  61:274,target 49
  14:263 shift
  3:263,target 15
  89:275,target 50
  74:277 shift
  3:261 shift
  80:279,target 56
  65:288 shift
  3:262 shift
  86:283,target 54
  74:259,target 85
  3:263 shift
  78:275,target 48
  17:0 reduce
  22:306,target 46
  53:270 reduce
  53:269 reduce
  5:269,target 19
  71:267,target 27
  53:271 reduce
  35:313,target 61
  23:279,target 29
  32:271,target 23
  29:283,target 23
  75:283,target 55
  23:267 reduce
  44:283 reduce
  40:257,target 65
  3:261,target 13
  23:271 reduce
  89:273,target 50
  83:283 reduce
  73:274,target 51
  64:283,target 23
  41:257 shift
  23:275 reduce
  41:258 shift
  26:269,target 17
  72:270,target 24
  72:269,target 24
  78:273,target 48
  32:269 reduce
  32:270 reduce
  35:312 goto
  71:267 reduce
  35:313 goto
  23:279 reduce
  32:271 reduce
  23:282 reduce
  71:271 reduce
  66:289,target 1
  7:305,target 24
  15:269,target 18
  23:283 reduce
  22:273,target 36
  62:283 reduce
  71:275 reduce
  3:301 goto
  9:0 reduce
  71:279 reduce
  11:0 reduce
  19:261 reduce
  71:282 reduce
  22:292,target 44
  76:283,target 23
  71:283 reduce
  5:265,target 17
  25:263,target 51
  41:257,target 66
  23:275,target 29
  1:300,target 12
  19:265 reduce
  20:265 shift
  80:279 reduce
  14:263,target 26
  28:261 reduce
  80:282 reduce
  80:283 reduce
  79:283 reduce
  37:315,target 64
  6:0 reduce
  71:282,target 27
  28:265 reduce
  60:313,target 78
  56:271,target 22
  42:259,target 69
  49:283 reduce
  67:289,target 2
  58:275 shift
  16:269,target 19
  88:282 reduce
  58:276 shift
  88:283 reduce
  58:277 shift
  50:0 reduce
  41:295 goto
  88:283,target 53
  58:277,target 75
  50:0,target 13
  41:295,target 68
  35:275,target 59
  51:269,target 16
  1:266,target 7
  71:279,target 27
  11:0,target 5
  77:283,target 37
  29:305,target 54
  0:294 shift
  22:287,target 43
  37:282,target 22
  0:296 goto
  23:271,target 29
  55:261 reduce
  37:279 shift
  64:305,target 80
  58:275,target 73
  37:282 shift
  55:265 reduce
  37:283 shift
  35:273,target 57
  16:268 shift
  67:289 reduce
  1:264,target 5
  16:269 shift
  76:282 shift
  7:267,target 21
  76:283 shift
  43:259,target 70
  5:265 shift
  25:263 shift
  68:289,target 82
  85:277 shift
  58:314 goto
  5:268 shift
  39:267,target 28
  5:269 shift
  22:285,target 41
  46:283 shift
  37:279,target 62
  44:283,target 45
  37:305 goto
  18:303,target 31
  76:305 goto
  43:259 shift
  4:0,target 9
  76:305,target 87
  71:275,target 27
  37:315 goto
  64:279 shift
  16:302 goto
  22:283,target 39
  73:273 reduce
  64:282 shift
  73:274 reduce
  64:283 shift
  60:275,target 59
  59:275,target 52
  30:269,target 26
  30:270,target 26
  73:275 reduce
  5:302 goto
  28:265,target 20
  1:260,target 3
  22:259 shift
  34:283 reduce
  69:290,target 83
  18:269,target 28
  18:270,target 29
  27:261,target 52
  1:299,target 11
  45:283,target 46
  64:305 goto
  53:270,target 25
  53:269,target 25
  60:273,target 77
  59:273,target 52
  7:282,target 22
  82:283 reduce
  22:272 shift
  22:259,target 34
  34:283,target 47
  80:283,target 56
  79:283,target 40
  22:273 shift
  40:257 shift
  61:273 reduce
  39:282,target 28
  12:0 reduce
  22:309,target 47
  22:310,target 48
  61:274 reduce
  71:271,target 27
  61:275 reduce
  22:278 shift
  23:283,target 29
  31:269 shift
  31:270 shift
  1:297,target 9
  22:279 shift
  31:271 shift
  33:0 reduce
  61:275,target 49
  22:278,target 37
  31:269,target 55
  31:270,target 29
  22:283 shift
  22:284 shift
  39:267 reduce
  8:0,target 15
  22:285 shift
  57:283,target 38
  22:286 shift
  5:302,target 20
  22:287 shift
  39:271 reduce
  28:261,target 20
  63:282,target 57
  39:279,target 28
  22:292 shift
  46:283,target 71
  39:275 reduce
  22:293 shift
  78:273 reduce
  78:274 reduce
  78:275 reduce
  22:306 goto
  61:273,target 49
  39:279 reduce
  12:0,target 6
  65:288,target 81
  39:282 reduce
  3:262,target 14
  22:309 goto
  22:310 goto
  89:274,target 50
  81:283,target 30
  39:283 reduce
  22:311 goto
  69:290 shift
  18:269 shift
  18:270 shift
  27:261 shift
  73:275,target 51
  70:291 shift
  18:271 shift
  31:304 goto
  4:0 reduce
  87:275 shift
  86:282,target 54
  72:271,target 24
  63:279,target 57
  7:267 shift
  78:274,target 48
  85:277,target 88
  58:314,target 76
  5:268,target 18
  48:283 reduce
  35:312,target 60
  32:269,target 23
  32:270,target 23
  29:282,target 22
  75:282,target 55
  74:277,target 86
  73:273,target 51
  64:282,target 22
  57:283 reduce
  19:265,target 21
  20:265,target 33
  47:283,target 32
  7:282 shift
  26:268,target 17
  7:283 shift
  39:275,target 28
  22:293,target 45
  41:258,target 67
  18:303 goto
  18:304 goto
  36:283,target 39
  15:268,target 18
  82:283,target 31
  22:272,target 35
  36:283 reduce
  15:268 reduce
  66:289 reduce
  64:279,target 79
  7:305 goto
  15:269 reduce
  16:302,target 27
  75:282 reduce
  71:283,target 27
  75:283 reduce
  54:271 shift
  76:282,target 22
  24:267 shift
  45:283 reduce
  84:283 reduce
  1:267,target 8
  48:283,target 33
  42:259 shift
  19:261,target 21
  56:270,target 22
  56:269,target 22
  39:271,target 28
  72:270 reduce
  72:269 reduce
  55:265,target 19
  37:283,target 23
  16:268,target 18
  83:283,target 35
  72:271 reduce
  63:279 reduce
  63:282 reduce
  63:283 reduce
  88:282,target 53
  58:276,target 74
  35:274,target 58
  14:259,target 25
  51:268,target 16
  1:265,target 6
  1:260 shift
  1:261 shift
  9:0,target 3
  13:0 reduce
  2:0,target 0
  1:264 shift
  51:268 reduce
  1:265 shift
  51:269 reduce
  1:266 shift
  22:286,target 42
  1:267 shift
  52:0,target 7
  18:304,target 32
  89:273 reduce
  49:283,target 34
  89:274 reduce
  81:283 reduce
  21:0,target 14
  89:275 reduce
  13:0,target 8
  87:275,target 89
  8:0 reduce
  10:0 reduce
  60:273 shift
  59:273 reduce
  3:301,target 16
  60:274 shift
  59:274 reduce
  38:283,target 42
  84:283,target 36
  60:275 shift
  59:275 reduce
  30:269 reduce
  30:270 reduce
  22:284,target 40
  29:271 shift
  30:271 reduce
  55:261,target 19
  52:0 reduce
  23:267,target 29
  29:271,target 53
  30:271,target 26
  1:300 goto
  1:261,target 4
}

array set xmlrpc::rules {
  9,l 298
  11,l 299
  32,l 306
  53,l 314
  6,l 297
  28,l 305
  50,l 313
  49,l 312
  3,l 296
  25,l 304
  46,l 310
  0,l 316
  22,l 303
  43,l 307
  18,l 301
  40,l 306
  39,l 306
  15,l 300
  36,l 306
  57,l 315
  12,l 299
  33,l 306
  54,l 314
  7,l 298
  29,l 305
  30,l 306
  51,l 313
  4,l 297
  26,l 304
  47,l 311
  1,l 295
  23,l 303
  44,l 308
  19,l 302
  20,l 302
  41,l 306
  16,l 301
  37,l 306
  13,l 300
  34,l 306
  55,l 314
  8,l 298
  10,l 299
  31,l 306
  52,l 313
  5,l 297
  27,l 305
  48,l 312
  2,l 295
  24,l 304
  45,l 309
  21,l 302
  42,l 306
  17,l 301
  38,l 306
  14,l 300
  35,l 306
  56,l 315
}

array set xmlrpc::rules {
  12,dc 1
  26,dc 1
  3,dc 2
  41,dc 2
  55,dc 1
  18,dc 1
  33,dc 1
  9,dc 1
  47,dc 1
  11,dc 2
  25,dc 2
  2,dc 1
  40,dc 3
  39,dc 1
  54,dc 2
  17,dc 2
  32,dc 1
  8,dc 2
  46,dc 1
  10,dc 3
  24,dc 3
  1,dc 1
  38,dc 2
  53,dc 3
  16,dc 3
  31,dc 3
  7,dc 4
  45,dc 1
  23,dc 1
  0,dc 1
  37,dc 3
  52,dc 1
  15,dc 1
  29,dc 1
  30,dc 3
  6,dc 1
  44,dc 1
  22,dc 2
  36,dc 3
  51,dc 2
  14,dc 2
  28,dc 2
  5,dc 1
  43,dc 1
  57,dc 1
  21,dc 1
  35,dc 3
  50,dc 4
  49,dc 1
  13,dc 3
  27,dc 3
  4,dc 1
  42,dc 1
  56,dc 2
  19,dc 3
  20,dc 2
  34,dc 1
  48,dc 2
}

array set xmlrpc::rules {
  41,line 131
  7,line 79
  37,line 126
  4,line 74
  34,line 122
  1,line 67
  31,line 119
  27,line 113
  24,line 108
  21,line 101
  17,line 95
  14,line 90
  11,line 85
  56,line 164
  53,line 159
  50,line 154
  49,line 151
  46,line 144
  43,line 135
  9,line 81
  40,line 130
  39,line 129
  6,line 76
  36,line 125
  3,line 71
  33,line 121
  29,line 115
  30,line 118
  26,line 110
  23,line 105
  19,line 99
  20,line 100
  16,line 94
  13,line 89
  10,line 84
  55,line 161
  52,line 156
  48,line 150
  45,line 141
  42,line 132
  8,line 80
  38,line 127
  5,line 75
  35,line 123
  2,line 68
  32,line 120
  28,line 114
  25,line 109
  22,line 104
  18,line 96
  15,line 91
  12,line 86
  57,line 165
  54,line 160
  51,line 155
  47,line 147
  44,line 138
}

array set xmlrpc::lr1_table {
  35 {{10 0 3}}
  66,trans {{273 88} {274 64} {275 65} {313 89}}
  36 {{47 283 1}}
  85,trans {{259 99} {277 100}}
  37 {{37 283 1} {38 283 1} {48 {273 274 275} 0} {49 {273 274 275} 0} {50 {273 274 275} 0} {51 {273 274 275} 0} {52 {273 274 275} 0}}
  38 {{39 283 1}}
  39 {{40 283 1} {41 283 1} {56 {279 282 283} 0} {57 {279 282 283} 0} {27 {279 282 283} 0} {28 {279 282 283} 0} {29 {279 282 283} 0}}
  40 {{42 283 1}}
  41 {{28 267 2}}
  42 {{30 283 1}}
  43 {{31 283 1} {1 289 0} {2 289 0}}
  44 {{35 283 1}}
  45 {{36 283 1}}
  46 {{45 283 1}}
  47 {{46 283 1}}
  48 {{27 267 2}}
  49 {{32 283 1}}
  50 {{33 283 1}}
  27,trans {{269 54} {270 31} {271 32} {303 55} {304 34}}
  51 {{34 283 1}}
  46,trans {}
  52 {{13 0 3}}
  65,trans {}
  53 {{16 {268 269} 3}}
  84,trans {}
  54 {{20 261 2}}
  55 {{19 261 2} {22 {269 270 271} 1} {24 {269 270 271} 0} {25 {269 270 271} 0} {26 {269 270 271} 0}}
  56 {{7 0 4}}
  57 {{25 {269 270 271} 2}}
  58 {{27 271 1} {28 271 1} {30 283 0} {31 283 0} {32 283 0} {33 283 0} {34 283 0} {35 283 0} {36 283 0} {37 283 0} {38 283 0} {39 283 0} {40 283 0} {41 283 0} {42 283 0} {45 283 0} {46 283 0} {47 283 0}}
  59 {{29 271 1}}
  60 {{24 {269 270 271} 2}}
  61 {{19 265 3}}
  62 {{22 {269 270 271} 2}}
  63 {{38 283 2}}
  64 {{50 {273 274 275} 1} {51 {273 274 275} 1} {53 {282 283} 0} {54 {282 283} 0} {55 {282 283} 0}}
  65 {{52 {273 274 275} 1}}
  26,trans {}
  66 {{37 283 2} {48 {273 274 275} 1} {50 {273 274 275} 0} {51 {273 274 275} 0} {52 {273 274 275} 0}}
  67 {{49 {273 274 275} 1}}
  45,trans {{259 78}}
  68 {{41 283 2}}
  64,trans {{275 84} {276 85} {277 86} {314 87}}
  69 {{27 {279 282 283} 1} {28 {279 282 283} 1} {30 283 0} {31 283 0} {32 283 0} {33 283 0} {34 283 0} {35 283 0} {36 283 0} {37 283 0} {38 283 0} {39 283 0} {40 283 0} {41 283 0} {42 283 0} {45 283 0} {46 283 0} {47 283 0}}
  70 {{29 {279 282 283} 1}}
  83,trans {}
  71 {{57 {279 282 283} 1}}
  72 {{40 283 2} {56 {279 282 283} 1} {27 {279 282 283} 0} {28 {279 282 283} 0} {29 {279 282 283} 0}}
  73 {{30 283 2}}
  74 {{1 289 1}}
  75 {{2 289 1}}
  76 {{31 283 2}}
  77 {{35 283 2}}
  78 {{36 283 2}}
  79 {{27 267 3}}
  80 {{19 261 3}}
  81 {{28 271 2}}
  82 {{27 271 2}}
  25,trans {{263 53}}
  83 {{24 {269 270 271} 3}}
  44,trans {{259 77}}
  84 {{51 {273 274 275} 2}}
  63,trans {}
  85 {{53 {282 283} 1} {54 {282 283} 1}}
  86 {{55 {282 283} 1}}
  82,trans {{283 98}}
  87 {{50 {273 274 275} 2} {27 275 0} {28 275 0} {29 275 0}}
  0 {{0 0 0} {3 0 0}}
  88 {{37 283 3}}
  1 {{3 0 1} {4 0 0} {5 0 0} {6 0 0} {7 0 0} {8 0 0} {9 0 0} {10 0 0} {11 0 0} {12 0 0} {13 0 0} {14 0 0} {15 0 0}}
  89 {{48 {273 274 275} 2}}
  90 {{28 {279 282 283} 2}}
  2 {{0 0 1}}
  91 {{27 {279 282 283} 2}}
  3 {{7 0 1} {8 0 1} {16 {268 269} 0} {17 {268 269} 0} {18 {268 269} 0}}
  92 {{40 283 3}}
  4 {{9 0 1}}
  93 {{56 {279 282 283} 2}}
  5 {{10 0 1} {11 0 1} {19 265 0} {20 265 0} {21 265 0}}
  94 {{30 283 3}}
  6 {{12 0 1}}
  95 {{31 283 3}}
  7 {{13 0 1} {14 0 1} {27 267 0} {28 267 0} {29 267 0}}
  96 {{35 283 3}}
  8 {{15 0 1}}
  97 {{36 283 3}}
  9 {{3 0 2}}
  98 {{27 271 3}}
  24,trans {{267 52}}
  99 {{53 {282 283} 2}}
  43,trans {{257 74} {258 75} {295 76}}
  62,trans {}
  81,trans {}
  99,trans {{277 105}}
  23,trans {}
  42,trans {{257 73}}
  61,trans {}
  79,trans {}
  80,trans {}
  98,trans {}
  9,trans {}
  22,trans {{259 36} {272 37} {273 38} {278 39} {279 40} {283 41} {284 42} {285 43} {286 44} {287 45} {292 46} {293 47} {306 48} {309 49} {310 50} {311 51}}
  41,trans {}
  59,trans {}
  60,trans {{271 83}}
  78,trans {{291 97}}
  97,trans {}
  8,trans {}
  100 {{54 {282 283} 2}}
  101 {{27 275 1} {28 275 1} {30 283 0} {31 283 0} {32 283 0} {33 283 0} {34 283 0} {35 283 0} {36 283 0} {37 283 0} {38 283 0} {39 283 0} {40 283 0} {41 283 0} {42 283 0} {45 283 0} {46 283 0} {47 283 0}}
  102 {{29 275 1}}
  103 {{50 {273 274 275} 3}}
  104 {{27 {279 282 283} 3}}
  105 {{53 {282 283} 3}}
  106 {{28 275 2}}
  21,trans {}
  107 {{27 275 2}}
  39,trans {{279 68} {282 69} {283 70} {305 71} {315 72}}
  40,trans {}
  108 {{50 {273 274 275} 4}}
  58,trans {{259 36} {272 37} {273 38} {278 39} {279 40} {283 81} {284 42} {285 43} {286 44} {287 45} {292 46} {293 47} {306 82} {309 49} {310 50} {311 51}}
  109 {{27 275 3}}
  77,trans {{290 96}}
  96,trans {}
  7,trans {{267 21} {282 22} {283 23} {305 24}}
  109,trans {}
  19,trans {}
  20,trans {{265 35}}
  38,trans {}
  57,trans {}
  76,trans {{289 95}}
  95,trans {}
  6,trans {}
  108,trans {}
  18,trans {{269 30} {270 31} {271 32} {303 33} {304 34}}
  37,trans {{273 63} {274 64} {275 65} {312 66} {313 67}}
  56,trans {}
  75,trans {}
  94,trans {}
  5,trans {{265 17} {268 18} {269 19} {302 20}}
  107,trans {{283 109}}
  17,trans {}
  36,trans {}
  55,trans {{269 80} {270 31} {271 32} {304 62}}
  74,trans {}
  93,trans {}
  4,trans {}
  106,trans {}
  16,trans {{268 27} {269 28} {302 29}}
  35,trans {}
  54,trans {}
  73,trans {{288 94}}
  92,trans {}
  3,trans {{261 13} {262 14} {263 15} {301 16}}
  105,trans {}
  15,trans {}
  34,trans {}
  53,trans {}
  72,trans {{279 92} {282 69} {283 70} {305 93}}
  91,trans {{283 104}}
  2,trans {}
  104,trans {}
  14,trans {{259 25} {263 26}}
  33,trans {{269 61} {270 31} {271 32} {304 62}}
  52,trans {}
  71,trans {}
  90,trans {}
  89,trans {}
  1,trans {{260 3} {261 4} {264 5} {265 6} {266 7} {267 8} {297 9} {298 10} {299 11} {300 12}}
  103,trans {{275 108}}
  13,trans {}
  32,trans {}
  51,trans {}
  69,trans {{259 36} {272 37} {273 38} {278 39} {279 40} {283 90} {284 42} {285 43} {286 44} {287 45} {292 46} {293 47} {306 91} {309 49} {310 50} {311 51}}
  70,trans {}
  88,trans {}
  0,trans {{294 1} {296 2}}
  102,trans {}
  12,trans {}
  31,trans {{271 57} {282 58} {283 59} {305 60}}
  49,trans {}
  50,trans {}
  68,trans {}
  87,trans {{282 101} {283 102} {305 103}}
  101,trans {{259 36} {272 37} {273 38} {278 39} {279 40} {283 106} {284 42} {285 43} {286 44} {287 45} {292 46} {293 47} {306 107} {309 49} {310 50} {311 51}}
  10 {{4 0 1}}
  11 {{5 0 1}}
  12 {{6 0 1}}
  13 {{8 0 2}}
  14 {{16 {268 269} 1} {17 {268 269} 1}}
  11,trans {}
  15 {{18 {268 269} 1}}
  16 {{7 0 2} {19 261 0} {20 261 0} {21 261 0}}
  29,trans {{261 56}}
  30,trans {}
  17 {{11 0 2}}
  48,trans {{283 79}}
  18 {{19 265 1} {20 265 1} {22 {269 270 271} 0} {23 {269 270 271} 0} {24 {269 270 271} 0} {25 {269 270 271} 0} {26 {269 270 271} 0}}
  67,trans {}
  20 {{10 0 2}}
  19 {{21 265 1}}
  86,trans {}
  21 {{14 0 2}}
  22 {{27 267 1} {28 267 1} {30 283 0} {31 283 0} {32 283 0} {33 283 0} {34 283 0} {35 283 0} {36 283 0} {37 283 0} {38 283 0} {39 283 0} {40 283 0} {41 283 0} {42 283 0} {45 283 0} {46 283 0} {47 283 0}}
  100,trans {}
  23 {{29 267 1}}
  24 {{13 0 2}}
  25 {{16 {268 269} 2}}
  26 {{17 {268 269} 2}}
  27 {{19 261 1} {20 261 1} {22 {269 270 271} 0} {23 {269 270 271} 0} {24 {269 270 271} 0} {25 {269 270 271} 0} {26 {269 270 271} 0}}
  28 {{21 261 1}}
  29 {{7 0 3}}
  30 {{20 265 2}}
  31 {{24 {269 270 271} 1} {25 {269 270 271} 1} {27 271 0} {28 271 0} {29 271 0}}
  10,trans {}
  32 {{26 {269 270 271} 1}}
  33 {{19 265 2} {22 {269 270 271} 1} {24 {269 270 271} 0} {25 {269 270 271} 0} {26 {269 270 271} 0}}
  28,trans {}
  34 {{23 {269 270 271} 1}}
  47,trans {}
}

array set xmlrpc::token_id_table {
  286 BASE64_
  286,t 0
  287 DATETIME_
  292,line 56
  302,line 98
  288 _INTEGER_
  265,title _METHODRESPONSE
  289 _DOUBLE_
  290 _BASE64_
  300 fault
  284,title INTEGER
  291 _DATETIME_
  301 methodName
  313,title {}
  292 TRUE_
  302 params
  288,line 51
  293 FALSE_
  303 xparam
  304 param
  294 HEADER_
  305 value
  295 numeric
  306 type
  296 command
  307 int
  262,t 0
  297 which
  308 double
  285,line 47
  298 methodCall
  310 false
  309 true
  299 methodResponse
  311 str
  283,t 0
  312 members
  313 member
  314,t 1
  314 name
  282,line 43
  315 values
  316 start'
  264,title METHODRESPONSE
  283,title _VALUE
  312,title {}
  278,line 38
  error,line 65
  258,t 0
  275,line 34
  279,t 0
  280,t 0
  311,t 1
  272,line 31
  263,title _METHODNAME
  282,title VALUE
  311,title {}
  268,line 25
  276,t 0
  265,line 20
  307,t 1
  297,t 1
  262,line 16
  262,title METHODNAME
  0 {$}
  0,t 0
  281,title _DATA
  310,title {}
  309,title {}
  error,t 0
  299,title {}
  258,line 8
  273,t 0
  304,t 1
  294,t 0
  261,title _METHODCALL
  279,title _ARRAY
  280,title DATA
  308,title {}
  269,t 0
  270,t 0
  298,title {}
  314,line 158
  291,t 0
  301,t 1
  311,line 146
  307,line 134
  266,t 0
  260,title METHODCALL
  259,title string
  297,line 73
  278,title ARRAY
  307,title {}
  297,title {}
  287,t 0
  304,line 107
  294,line 59
  291,line 54
  error,title {}
  301,line 93
  263,t 0
  258,title float
  287,line 49
  277,title _NAME
  284,t 0
  306,title {}
  296,title {}
  315,t 1
  284,line 46
  281,line 41
  260,t 0
  259,t 0
  281,t 0
  257,title integer
  277,line 36
  276,title NAME
  312,t 1
  305,title {}
  295,title {}
  274,line 33
  271,line 29
  277,t 0
  308,t 1
  267,line 23
  298,t 1
  275,title _MEMBER
  304,title {}
  294,title string
  264,line 19
  261,line 15
  274,t 0
  305,t 1
  295,t 1
  257,line 7
  274,title MEMBER
  293,title FALSE
  303,title {}
  271,t 0
  error error
  292,t 0
  302,t 1
  316,line 166
  273,title _STRUCT
  313,line 153
  292,title TRUE
  302,title {}
  267,t 0
  310,line 143
  309,line 140
  299,line 83
  288,t 0
  306,line 117
  296,line 70
  272,title STRUCT
  303,line 103
  291,title _DATETIME
  293,line 57
  301,title {}
  264,t 0
  285,t 0
  289,line 52
  290,line 53
  300,line 88
  316,t 1
  286,line 48
  271,title _PARAM
  261,t 0
  283,line 44
  289,title _DOUBLE
  290,title _BASE64
  300,title {}
  282,t 0
  279,line 39
  280,line 40
  313,t 1
  276,line 35
  257,t 0
  269,title _PARAMS
  270,title PARAM
  273,line 32
  288,title _INTEGER
  278,t 0
  310,t 1
  309,t 1
  299,t 1
  269,line 26
  270,line 28
  266,line 22
  268,title PARAMS
  275,t 0
  263,line 17
  287,title DATETIME
  316,title {}
  306,t 1
  296,t 1
  260,line 14
  259,line 10
  272,t 0
  267,title _FAULT
  303,t 1
  257 INT_
  286,title BASE64
  293,t 0
  315,title {}
  258 REAL_
  260 METHODCALL_
  259 STRING_
  261 _METHODCALL_
  262 METHODNAME_
  263 _METHODNAME_
  264 METHODRESPONSE_
  315,line 163
  265 _METHODRESPONSE_
  266 FAULT_
  267 _FAULT_
  268,t 0
  268 PARAMS_
  269 _PARAMS_
  270 PARAM_
  312,line 149
  271 _PARAM_
  272 STRUCT_
  289,t 0
  290,t 0
  300,t 1
  266,title FAULT
  273 _STRUCT_
  274 MEMBER_
  285,title DOUBLE
  314,title {}
  275 _MEMBER_
  308,line 137
  276 NAME_
  298,line 78
  277 _NAME_
  278 ARRAY_
  279 _ARRAY_
  280 DATA_
  281 _DATA_
  305,line 112
  282 VALUE_
  295,line 66
  265,t 0
  283 _VALUE_
  284 INTEGER_
  285 DOUBLE_
}

proc xmlrpc::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { set _ $1 }
                    2 { set _ $1 }
                    3 { global parse; set parse(result) $2 }
                    4 { set _ $1 }
                    5 { set _ $1 }
                    6 { set _ $1 }
                    7 { set _ "\{methodcall $2 $3\}" }
                    8 { set _ "\{methodcall \{\}\}" }
                    9 { set _ "\{methodcall \{\}\}" }
                    10 { set _ "\{methodresponse $2\}" }
                    11 { set _ "\{methodresponse \{\}\}" }
                    12 { set _ "\{methodresponse \{\}\}" }
                    13 { set _ "\{fault $2\}" }
                    14 { set _ "\{fault \{\}\}" }
                    15 { set _ "\{fault \{\}\}" }
                    16 { set _ "\{methodname $2\}" }
                    17 { set _ "\{methodname \{\}\}" }
                    18 { set _ "\{methodname \{\}\}" }
                    19 { set _ "\{params $2\}" }
                    20 { set _ "\{params \{\}\}" }
                    21 { set _ "\{params \{\}\}" }
                    22 { append _ " $2" }
                    23 { set _ $1 }
                    24 { set _ "\{param $2\}" }
                    25 { set _ "\{param \{\}\}" }
                    26 { set _ "\{param \{\}\}" }
                    27 { set _ "\{value $2\}" }
                    28 { set _ "\{value \{\}\}" }
                    29 { set _ "\{value \{\}\}" }
                    30 { set _ $2 }
                    31 { set _ $2 }
                    32 { set _ $1 }
                    33 { set _ $1 }
                    34 { set _ $1 }
                    35 { set _ $2 }
                    36 { set _ $2 }
                    37 { set _ "\{struct $2\}" }
                    38 { set _ "\{struct \{\}\}" }
                    39 { set _ "\{struct \{\}\}" }
                    40 { set _ "\{array \{data $2\}\}" }
                    41 { set _ "\{array \{\}\}" }
                    42 { set _ "\{array \{\}\}" }
                    43 { set _ "\{int $2\}" }
                    44 { set _ "\{double $2\}" }
                    45 { set _ "\{boolean 1\}" }
                    46 { set _ "\{boolean 0\}" }
                    47 { set _ "\{string \{$1\}\}" }
                    48 { append _ " $2" }
                    49 { set _ $1 }
                    50 { set _ "\{member $2 $3\}" }
                    51 { set _ "\{member \{\}\}" }
                    52 { set _ "\{member \{\}\}" }
                    53 { set _ "\{name $2\}" }
                    54 { set _ "\{name \{\}\}" }
                    55 { set _ "\{name \{\}\}" }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc xmlrpc::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
