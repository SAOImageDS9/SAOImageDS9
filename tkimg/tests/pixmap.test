# This file is a Tcl script to test pixmap reading.
# It is organized in the standard fashion for Tcl tests.

package require Tk

package require tcltest
tcltest::configure {*}$argv
source [file join [file dirname [info script]] constraints.tcl]

imageInit

namespace eval ::pixmap::test {
    namespace import ::tcltest::*

    set fmt     "pixmap"
    set ext     "xpm"
    set inFile  "testimgs/img.$ext"
    set outFile "testimgs/img_out.$ext"

    set imgdata [readFile $inFile]

    test pixmap-0.1 {package require img::pixmap} -setup {
    } -body {
        set pkgLoaded [catch {package require img::pixmap}]
    } -result 0

    # Execute the follwing tests only, if the format handler could be loaded.
    if { $pkgLoaded == 0 } {
        test pixmap-1.1 {Read pixmap from file and check size} -setup {
            catch {image delete i}
        } -body {
            image create pixmap i -file $inFile
            imageSize i
        } -result [refSize]

        test pixmap-1.2 {Read pixmap from file and check -file option} -setup {
        } -body {
            set return [i cget -file]
        } -result $inFile

        test pixmap-1.3 {Read pixmap from file and check -data option} -setup {
        } -body {
            set return [i cget -data]
        } -result ""

        image delete i


        test pixmap-2.1 {Read pixmap from string and check size} -setup {
            catch {image delete i}
        } -body {
            image create pixmap i -data $imgdata
            imageSize i
        } -result [refSize]

        test pixmap-2.2 {Read pixmap from string and check -file option} -setup {
        } -body {
            set return [i cget -file]
        } -result ""

        test pixmap-2.3 {Read pixmap from string and check -data option} -setup {
        } -body {
            set cgetdata [i cget -data]
            set return [expr { [string length $cgetdata] > 0 }]
        } -result 1

        image delete i


        test pixmap-2.1 {Read pixmap from file without resolution information} -setup {
            catch {image delete i}
        } -body {
            image create pixmap i -file $inFile
            imageResolution i
        } -cleanup {
            image delete i
        } -constraints {
            Tk87
        } -result {-1 -1}

        # Pixmap does not support writing.
    }
}

imageFinish
tcltest::cleanupTests
namespace delete ::pixmap::test
